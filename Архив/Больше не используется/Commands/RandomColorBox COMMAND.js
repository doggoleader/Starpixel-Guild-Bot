const { SlashCommandBuilder } = require('discord.js');
const { execute } = require('../../../src/events/client/start_bot/ready');
const { Temp } = require(`../../../src/schemas/temp_items`);
const chalk = require(`chalk`);
const ch_list = require(`../../../src/discord structure/channels.json`)
const linksInfo = require(`../../../src/discord structure/links.json`);
const { User } = require('../../../src/schemas/userdata');

module.exports = {
    category: `box`,
    plugin: `info`,
    data: new SlashCommandBuilder()
        .setName(`randomcolor`)  //–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        .setDescription(`–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç`)
        .setDMPermission(false), //–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    async execute(interaction, client) {
        try {
            const { Guild } = require(`../../../src/schemas/guilddata`)
            const pluginData = await Guild.findOne({ id: interaction.guild.id })
            if (pluginData.plugins.items === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
            const user = interaction.member.user //–î–û–ë–ê–í–ò–¢–¨ –í –î–†–£–ì–ò–ï

            const { roles } = interaction.member //–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã
            const member = interaction.member
            const role = await interaction.guild.roles  //–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –¥–ª—è role
                .fetch("896100103700496436") //ID –∫–æ—Ä–æ–±–∫–∏
                .catch(console.error);
            if (roles.cache.has("896100103700496436") || roles.cache.has("567689925143822346")) { //–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∫–æ—Ä–æ–±–∫–∏ || –ø—Ä–∞–≤–ª–µ–Ω–∏—è
                const timestamp = Math.round(interaction.createdTimestamp / 1000)
                const opener = interaction.member.id;
                const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
                //–õ—É—Ç –∏–∑ –∫–æ—Ä–æ–±–æ–∫
                //–°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
                //name - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
                //dropChanceLOOT - –®–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
                //roleID - ID —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–≤—è–∑–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º –ª—É—Ç–æ–º.

                //–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                let { loot } = require(`../../src/functions/Boxes/Box loot/randomcolor.json`)

                //—Ä–∞–Ω–¥–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                let rloot = loot[Math.floor(Math.random() * loot.length)];
                const tempData = await Temp.findOne({ userid: user.id, roleid: rloot.loot_roleID })

                const r1 = `595893144055316490`; //–ù–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –µ—Å—Ç—å –≤ /colors
                const r2 = `595892599693246474`;
                const r3 = `595892677451710468`;
                const r4 = `595892238370996235`;
                const r5 = `589770984391966760`;
                const r6 = `595893568485326862`;
                const r7 = `630395361508458516`;
                const r8 = `595892930204401665`;
                const r9 = `595889341058777088`;
                const r10 = `1024741633947873401`;

                if (member.roles.cache.has(r1) || member.roles.cache.has(r2) || member.roles.cache.has(r3) || member.roles.cache.has(r4) || member.roles.cache.has(r5) || member.roles.cache.has(r6) || member.roles.cache.has(r7) || member.roles.cache.has(r8) || member.roles.cache.has(r9) || member.roles.cache.has(r10)) return interaction.reply({
                    content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –µ—Å—Ç—å —Ü–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/colors reset\`, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –≤–∞—à —Ü–≤–µ—Ç!`,
                    ephemeral: true
                })
                await roles.remove(role).catch(console.error); //–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∫–æ—Ä–æ–±–∫–∏
                //–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ª—É—Ç–µ              
                const r_loot_msg = await interaction.guild.channels.cache.get(ch_list.box)
                    .send(
                        `‚óæ
<@${opener}> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞...
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ:rainbow:‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
–û–Ω –ø–æ–ª—É—á–∞–µ—Ç \`${rloot.loot_name}\` —Ü–≤–µ—Ç –Ω–∞ 1 –Ω–µ–¥–µ–ª—é!
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ:rainbow:‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
‚óæ`)
                if (!member.roles.cache.has(rloot.loot_roleID) && (userData.rank_number >= 6 || userData.sub_type >= 3)) {
                    await member.roles.add(rloot.loot_roleID).catch(console.error);
                    await r_loot_msg.react("‚úÖ")
                    const tempItems = new Temp({
                        userid: user.id,
                        guildid: interaction.guild.id,
                        roleid: rloot.loot_roleID,
                        expire: Date.now() + (1000 * 60 * 60 * 24 * 7 * (userData.perks.temp_items + 1)),
                        color: true
                    })
                    tempItems.save()
                } else if (member.roles.cache.has(rloot.loot_roleID)) {
                    await r_loot_msg.react("üö´")
                } else {
                    await r_loot_msg.react("üö´")
                };

                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.magentaBright(`[${interaction.user.tag} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞]`) + chalk.gray(`: –û–Ω –ø–æ–ª—É—á–∏–ª ${rloot.loot_name}`))
                
            } else {
                await interaction.reply({
                    content: `–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ–ª—å "\`${role.name}\`!"`,
                    ephemeral: true
                })
            }
        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**–ö–æ–º–∞–Ω–¥–∞**: \`${interaction.commandName}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }

    }
};