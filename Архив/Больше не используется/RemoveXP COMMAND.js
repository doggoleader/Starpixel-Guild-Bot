const { SlashCommandBuilder } = require('discord.js');
const { execute } = require('../../../src/events/client/ready');
const { User } = require(`../../src/schemas/userdata`);
const chalk = require(`chalk`);

module.exports = {
    category: ``,
    plugin: `info`,
    data: new SlashCommandBuilder()
        .setName(`remove-xp`)
        .setDescription(`–£–±—Ä–∞—Ç—å –æ–ø—ã—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`)
        .addStringOption(option => option
            .setName(`—Ç–∏–ø`)
            .setDescription(`–¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞`)
            .setAutocomplete(true)
            .setRequired(true)
        )
        .addUserOption(option => option
            .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –æ–ø—ã—Ç.`)
            .setRequired(true)
        )
        .addNumberOption(option => option
            .setName(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±–∏—Ä–∞–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞.`)
            .setRequired(true)
        ),

    async autoComplete(interaction, client) {

        const focusedValue = interaction.options.getFocused();
        const choices = ['–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', '–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤', '–†—É–º–±–∏–∫–∏'];
        const filtered = choices.filter(choice => choice.toLowerCase().includes(focusedValue.toLowerCase()));;
        await interaction.respond(
            filtered.map(choice => ({ name: choice, value: choice })),
        );
    },
    async execute(interaction, client) {
        try {

        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false },
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**–ö–æ–º–∞–Ω–¥–∞**: \`${interaction.commandName}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }

        const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.member.user;
        const userData = await User.findOne({ id: user.id })
        switch (interaction.options.getString(`—Ç–∏–ø`)) {
            case `–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                if (userData.totalexp < interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)) return interaction.followUp({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞, —á–µ–º –µ—Å—Ç—å —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${userData.totalexp}üåÄ)`,
                        ephemeral: true
                    })
                
                userData.exp -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
                userData.totalexp -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);

            while (userData.exp < 0) {
                var exp = userData.exp
                userData.level -= 1
                userData.exp += 5 * (userData.level ^ 2) + (50 * userData.level) + 100 + exp;
                if (userData.totalexp <= 0) {
                     userData.level = 0;
                     userData.exp = 0;
                     userData.totalexp = 0;
                }
            }
                
                userData.save();
                interaction.followUp(`–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üåÄ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}!`)
                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.exp} –æ–ø—ã—Ç–∞ –∏ ${userData.level} —É—Ä–æ–≤–µ–Ω—å.`))
            };

                break;
            case `–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤`: {
                if (userData.rank < interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)) return interaction.followUp({
                    content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞, —á–µ–º –µ—Å—Ç—å —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${userData.rank}üí†)`,
                    ephemeral: true
                })
                userData.rank -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                userData.save();
                interaction.followUp(`–í—ã–¥–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üí† —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤!`)
                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤.`))

            }

                break;
            case `–†—É–º–±–∏–∫–∏`: {
                if (userData.rumbik < interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)) return interaction.followUp({
                    content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ —Ä—É–±–º–∏–∫–æ–≤, —á–µ–º –µ—Å—Ç—å —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${userData.rumbik}<:Rumbik:883638847056003072>)`,
                    ephemeral: true
                })
                userData.rumbik -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                userData.save();
                interaction.followUp(`–í—ã–¥–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}<:Rumbik:883638847056003072> —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤!`)
                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª —Ä—É–º–±–∏–∫–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤.`))
            }

                break;

            default:
                break;
        }
    }
}