const { GuildMember, Client, EmbedBuilder } = require("discord.js");
const { User } = require("../../../schemas/userdata");

const { GuildProgress } = require("./progress_class");
const { rankName, calcActLevel, convertToRoman, getPerkName, getUpgradeName } = require("../../../functions");
const api = process.env.hypixel_apikey
const rolesInfo = require(`../../../discord structure/roles.json`)
const fetch = require(`node-fetch`);

/**
 * Creates information about User and gets all info from DB for Profile Info command.
 */
class UserProfile {
    /** @private */
    member;
    /** @private */
    client;
    /**
    * 
    * @param {GuildMember} member Member, who's profile you are going to check.
    * @param {import("../System/StarpixelClient").StarpixelClient} client Client class.
    */
    constructor(member, client) {
        /** @private */
        this.member = member;
        /** @private */
        this.client = client;
    }
    /** 
     * @returns MongoDB User Data profile
    */
    async getUserData() {
        const userData = await User.findOne({ userid: this.member.user.id })
        return userData
    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     * General information
     */
    async getGeneral() {
        const userData = await this.getUserData()

        const users = await User.find()
        let sort1 = users.sort((a, b) => {
            return b.exp - a.exp
        })
        let sorts = sort1.sort((a, b) => {
            return b.level - a.level
        })
        let rank = sorts.findIndex(i => i.userid == userData.userid) + 1
        let neededXP = 5 * (Math.pow(userData.level, 2)) + (50 * userData.level) + 100;
        let part1, part2
        if (userData.exp >= 1000) {
            part1 = (userData.exp / 1000).toFixed(1) + `k`
        } else part1 = userData.exp
        if (neededXP >= 1000) {
            part2 = (neededXP / 1000).toFixed(1) + `k`
        } else part2 = neededXP


        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –û—Å–Ω–æ–≤–Ω–æ–µ
\`–†–∞–Ω–≥ –≤ –≥–∏–ª—å–¥–∏–∏\` - ${rankName(userData.rank_number)}
\`–†—É–º–±–∏–∫–∏\` - ${userData.rumbik}<:Rumbik:883638847056003072>
\`–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤\` - ${userData.rank}üí†
\`–ü–æ—Å–µ—â–µ–Ω–æ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä\` - ${userData.visited_games} –∏–≥—Ä
\`–û–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\` - ${userData.gexp} GEXP
\`–ë–∏–ª–µ—Ç—ã\` - ${userData.tickets}üè∑
\`–ú–µ–¥–∞–ª—å ü•á\` - ${userData.medal_1} —à—Ç.
\`–ú–µ–¥–∞–ª—å ü•à\` - ${userData.medal_2} —à—Ç.
\`–ú–µ–¥–∞–ª—å ü•â\` - ${userData.medal_3} —à—Ç.
\`–°–æ–±—Ä–∞–Ω–æ –∑–≤—ë–∑–¥–Ω—ã—Ö –∫–æ–º–ø–ª–µ–∫—Ç–æ–≤\` - ${userData.starway.current} ‚ú®
\`–ù–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.stacked_items.length} —à—Ç.
\`–°–±—Ä–æ—à–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å\` - ${userData.times_reset} —Ä–∞–∑

## –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
\`–ü—Ä–æ–≥—Ä–µ—Å—Å\` - ${part1}/${part2}üåÄ
\`–£—Ä–æ–≤–µ–Ω—å\` - ${userData.level}
\`–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞\` - ${calcActLevel(0, userData.level, userData.exp)}üåÄ
\`–ü–æ–∑–∏—Ü–∏—è\` - #${rank}`)

        return {
            label: "–û—Å–Ω–æ–≤–Ω–æ–µ",
            description: "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ",
            emoji: "üìÉ",
            value: "main",
            embed: embed
        }
    }
    /**
     * @deprecated Since v2.18.0 - Everything now shows on Main Page of Profile Info
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information. 
     * Activity Experience & Levels
     */
    async getActivityExp() {
        const userData = await this.getUserData()
        const users = await User.find()
        let sort1 = users.sort((a, b) => {
            return b.exp - a.exp
        })
        let sorts = sort1.sort((a, b) => {
            return b.level - a.level
        })
        let rank = sorts.findIndex(i => i.userid == userData.userid) + 1
        let neededXP = 5 * (Math.pow(userData.level, 2)) + (50 * userData.level) + 100;
        let part1, part2
        if (userData.exp >= 1000) {
            part1 = (userData.exp / 1000).toFixed(1) + `k`
        } else part1 = userData.exp
        if (neededXP >= 1000) {
            part2 = (neededXP / 1000).toFixed(1) + `k`
        } else part2 = neededXP
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
\`–ü—Ä–æ–≥—Ä–µ—Å—Å\` - ${part1}/${part2}üåÄ
\`–£—Ä–æ–≤–µ–Ω—å\` - ${userData.level}
\`–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞\` - ${calcActLevel(0, userData.level, userData.exp)}üåÄ
\`–ü–æ–∑–∏—Ü–∏—è\` - #${rank}`)

        return {
            label: "–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º —É—Ä–æ–≤–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
            emoji: "üåÄ",
            value: "act",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     * User Progress in the guild.
     */
    async getProgress() {
        const progress = new GuildProgress(this.member, this.client)
        let max_points = await progress.getMaxPoints()
        let current = await progress.getAndUpdateUserPoints();
        const p_file = progress.getProgressFile();

        let sum = 0;
        const map = await current.map((item, i) => {
            let file_info = p_file.requirements.find(it => it.name == item.name)
            let name = progress.getTaskKeyValue(item.name);
            let percentage = 0;
            let max = 0;
            if (file_info.array !== undefined) {
                max = (file_info.array.length / file_info.point_every) * file_info.points_per
                percentage = Math.floor(1000 * (Number(item.sum) / (file_info.array.length / file_info.point_every * file_info.points_per))) / 10
            }
            else if (file_info.total !== undefined) {
                max = (file_info.total / file_info.point_every) * file_info.points_per
                percentage = Math.floor(1000 * (Number(item.sum) / (file_info.total / file_info.point_every * file_info.points_per))) / 10
            }

            sum += Number(item.sum)
            return `**${++i}.** ${name} - ${Number(item.sum)}/${max} –æ—á–∫–æ–≤ (${percentage}%)`
        })

        let totalPercentage = Math.round(1000 * (sum / max_points)) / 10
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏
${map.join(`\n`)}
**–ò–¢–û–ì–û - ${sum}/${max_points} (${totalPercentage}%)**

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!
`)

        return {
            label: "–ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –≤ –≥–∏–ª—å–¥–∏–∏ –∑–∞ –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –∏—Ç–æ–≥–æ",
            emoji: "üå†",
            value: "progress",
            embed: embed
        }

    }

    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     * User Progress in the guild.
     */
    async getProgressInformation() {
        const userData = await this.getUserData()
        const progress = new GuildProgress(this.member, this.client)
        let max_points = await progress.getMaxPoints()
        let current = await progress.getAndUpdateUserPoints();
        const p_file = progress.getProgressFile();

        let sum = 0;
        let leftRoles = [], leftPerks = [], leftUpgrades = []
        const map = await current.map(async (item, i) => {
            let file_info = p_file.requirements.find(it => it.name == item.name)
            let name = progress.getTaskKeyValue(item.name);
            let percentage = 0;
            let max = 0;
            let task = progress.getTaskDescription(item.name)
            sum += Number(item.sum)
            if (file_info.array !== undefined) {
                max = (file_info.array.length / file_info.point_every) * file_info.points_per
                percentage = Math.floor(1000 * (Number(item.sum) / (file_info.array.length / file_info.point_every * file_info.points_per))) / 10
                let notClaimed = []
                for (let it of file_info.array) {
                    switch (file_info.name) {
                        case `ALL_ROLES`: {
                            if (!userData.progress.items.find(it2 => it2.name == item.name).claimed_items.includes(it)) {
                                notClaimed.push(` - <@&${it}>`)
                                leftRoles.push(`- <@&${it}>`)
                            }
                        }
                            break;
                        case `MAXED_PERKS`: {
                            if (!userData.progress.items.find(it2 => it2.name == item.name).claimed_items.includes(it)) {
                                notClaimed.push(` - ${getPerkName(it)}`)
                                leftPerks.push(`- ${getPerkName(it)}`)
                            }
                        }
                            break;
                        case `MAXED_UPGRADES`: {
                            if (!userData.progress.items.find(it2 => it2.name == item.name).claimed_items.includes(it)) {
                                notClaimed.push(` - ${getUpgradeName(it)}`)
                                leftUpgrades.push(`- ${getUpgradeName(it)}`)
                            }
                        }
                            break;

                        default:
                            break;
                    }
                }
                return `**${++i}.** ${name} - ${Number(item.sum)}/${max} –æ—á–∫–æ–≤ (${percentage}%)
- ${task}
 - ${notClaimed.length <= 0 ? `**–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!** :tada:` : `–û—Å—Ç–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å: ${notClaimed.length}`}`
            }
            else if (file_info.total !== undefined) {
                max = (file_info.total / file_info.point_every) * file_info.points_per
                percentage = Math.floor(1000 * (Number(item.sum) / (file_info.total / file_info.point_every * file_info.points_per))) / 10
                const dbInfo = userData.progress.items.find(it => it.name == item.name)
                let progress = ``
                if (!dbInfo) progress = `???/${file_info.total}`
                else {
                    if (dbInfo.max_items !== undefined) {
                        progress = `${dbInfo.max_items >= file_info.total ? `${file_info.total}/${file_info.total} **–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!** :tada:` : `${dbInfo.max_items}/${file_info.total}`}`
                    } else if (dbInfo.total_items !== undefined) {
                        progress = `${dbInfo.total_items >= file_info.total ? `${file_info.total}/${file_info.total} **–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!** :tada:` : `${dbInfo.total_items}/${file_info.total}`}`
                    }
                }
                return `**${++i}.** ${name} - ${Number(item.sum)}/${max} –æ—á–∫–æ–≤ (${percentage}%)
- ${task}
 - –ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress}`
            }

        })

        const mapProm = await Promise.all(map)

        let totalPercentage = Math.round(1000 * (sum / max_points)) / 10
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏
${mapProm.join(`\n`)}
**–ò–¢–û–ì–û - ${sum}/${max_points} –æ—á–∫–æ–≤ (${totalPercentage}%)**

**–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!**`)

        const unclaimedRoles = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏
**–ù–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏**:
${leftRoles.length <= 0 ? `–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ —Ä–æ–ª–∏! :tada:` : leftRoles.join(`\n`)}

**–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!**`)

        const unclaimedPerks = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏
**–ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ —É–º–µ–Ω–∏—è**:
${leftPerks.length <= 0 ? `–í—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –≤—Å–µ —É–º–µ–Ω–∏—è! :tada:` : leftPerks.join(`\n`)}

**–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!**`)

        const unclaimedUpgrades = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(
                `## –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–∏–ª—å–¥–∏–∏
**–ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è**:
${leftUpgrades.length <= 0 ? `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∫–∞—á–∞–ª–∏ –≤—Å–µ —É–ª—É—á—à–µ–Ω–∏—è! :tada:` : leftUpgrades.join(`\n`)}

**–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!**`)

        return [embed, unclaimedRoles, unclaimedPerks, unclaimedUpgrades]

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getElements() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –ù–∞–≤—ã–∫–∏ –ø–∏—Ç–æ–º—Ü–µ–≤

__**–ó–µ–º–ª—è**__
\`–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–æ—Ä–Ω—ã—Ö –ø–æ—Ä–æ–¥\` - ${userData.elements.mountains == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π\` - ${userData.elements.fast_grow == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–¥ –∑–µ–º–ª—ë–π\` - ${userData.elements.underground == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}

__**–í–æ–¥–∞**__
\`–ü–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –≥–ª—É–±–∏–Ω–µ\` - ${userData.elements.diving == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ç–µ—á–µ–Ω–∏—è–º\` - ${userData.elements.resistance == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–ü–æ–¥–≤–æ–¥–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\` - ${userData.elements.respiration == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}

__**–û–≥–æ–Ω—å**__
\`–ó–∞—â–∏—Ç–∞ –æ—Ç –æ–≥–Ω—è\` - ${userData.elements.fire_resistance == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–£–¥–∞—Ä –º–æ–ª–Ω–∏–∏\` - ${userData.elements.lightning == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–º–µ–Ω–µ–º\` - ${userData.elements.flame == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}

__**–í–æ–∑–¥—É—Ö**__
\`–ü–æ–ª—ë—Ç –≤ –Ω–µ–±–µ—Å–∞—Ö\` - ${userData.elements.flying == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–ü–æ–≤–µ–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–æ–º\` - ${userData.elements.wind == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}
\`–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑\` - ${userData.elements.eagle_eye == 1 ? "–£—Ä–æ–∫ –≤—ã—É—á–µ–Ω ‚úÖ" : "–£—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω ‚ùå"}`)

        return {
            label: "–°—Ç–∏—Ö–∏–∏",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö –≤ —Å—Ç–∏—Ö–∏—è—Ö",
            emoji: "üåä",
            value: "elem",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getAchievements() {
        const userData = await this.getUserData()
        let n_unclaimed = []

        for (let norm of rolesInfo.achievements_normal) {
            if (!this.member.roles.cache.has(norm)) {
                n_unclaimed.push(norm)
            }
        }

        let m_unclaimed = []

        for (let myth of rolesInfo.achievements_myth) {
            if (!this.member.roles.cache.has(myth)) {
                m_unclaimed.push(myth)
            }
        }

        let n_map


        if (n_unclaimed.length <= 0) {
            n_map = `üéâ –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –æ–±—ã—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ‚ú®`
        } else {
            n_map = n_unclaimed.map((norm, i) => {
                return `**${++i}.** <@&${norm}>`
            }).join(`\n`)
        }
        let m_map
        if (m_unclaimed.length <= 0) {
            m_map = `üéâ –í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –º–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ‚ú®`
        } else {
            m_map = m_unclaimed.map((myth, i) => {
                return `**${++i}.** <@&${myth}>`
            }).join(`\n`)
        }
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≥–∏–ª—å–¥–∏–∏
__**–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**__
\`–û–±—ã—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\` - ${userData.achievements.normal}/${rolesInfo.achievements_normal.length}
\`–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\` - ${userData.achievements.mythical}/${rolesInfo.achievements_myth.length}

__**–ù–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è**__
__–û–±—ã—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è__
${n_map}

__–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è__
${m_map}`)

        return {
            label: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≥–∏–ª—å–¥–∏–∏",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö",
            emoji: "üèÖ",
            value: "achievements",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getPerks() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –£–º–µ–Ω–∏—è
\`üî∫ –ü–æ–≤—ã—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤\` - ${userData.perks.rank_boost}/6
\`üîª –°–∫–∏–¥–∫–∞ –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\` - ${userData.perks.king_discount}/4
\`üîª –°–∫–∏–¥–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\` - ${userData.perks.act_discount}/3
\`üîª –°–∫–∏–¥–∫–∞ –≤ –æ–±—ã—á–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ –≥–∏–ª—å–¥–∏–∏\` - ${userData.perks.shop_discount}/4
\`üïí –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.perks.temp_items}/1
\`üí∞ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è\` - ${userData.perks.sell_items}/1
\`üè∑Ô∏è –£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞\` - ${userData.perks.ticket_discount}/5
\`‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.perks.change_items}/1
\`üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏–∑ –∫–æ—Ä–æ–±–æ–∫ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ\` - ${userData.perks.store_items}/1
\`üïí –£–º–µ–Ω—å—à–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏\` - ${userData.perks.decrease_cooldowns}/5

## –£–ª—É—á—à–µ–Ω–∏—è
\`–†–∞–∑–º–µ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è\`: ${userData.upgrades.inventory_size} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.inventory_size_tier)})
\`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫\`: ${userData.upgrades.max_purchases} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.max_purchases_tier)})
\`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂\`: ${userData.upgrades.max_sells} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.max_sells_tier)})
\`–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç\`: ${userData.bank.account_type}
\`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω–æ–≤\`: ${userData.upgrades.veterans_quests} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.veterans_quests_tier)})`)

        return {
            label: "–£–º–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö —É–º–µ–Ω–∏—è—Ö –∏ —É–ª—É—á—à–µ–Ω–∏—è—Ö –≤ –≥–∏–ª—å–¥–∏–∏",
            emoji: "üìç",
            value: "perks",
            embed: embed
        }

    }
    /**
     * @deprecated Since v2.18.0 - Everything now shows on Perks & Upgrades Page.
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getUpgrades() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –£–ª—É—á—à–µ–Ω–∏—è

**–†–∞–∑–º–µ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è**: ${userData.upgrades.inventory_size} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.inventory_size_tier)})
**–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫**: ${userData.upgrades.max_purchases} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.max_purchases_tier)})
**–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂**: ${userData.upgrades.max_sells} (—É—Ä–æ–≤–µ–Ω—å ${convertToRoman(userData.upgrades.max_sells_tier)})
**–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç**: ${userData.bank.account_type}`)

        return {
            label: "–£–ª—É—á—à–µ–Ω–∏—è",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö —É–ª—É—á—à–µ–Ω–∏—è—Ö",
            emoji: "üîπ",
            value: "upgrades",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getGexp() {
        const userData = await this.getUserData()
        let embed

        if (userData.onlinemode) {
            const response = await fetch(`https://api.hypixel.net/guild?id=5c1902fc77ce84cd430f3959`, {
                headers: {
                    "API-Key": api,
                    "Content-Type": "application/json"
                }
            })
            let json
            if (response.ok) json = await response.json()
            let gexp_nums
            let sum
            let map
            let player = await json.guild.members.find(member => member.uuid == userData.uuid)
            if (!player) {
                map = `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–∏–ª—å–¥–∏–∏!`
                sum = 0
            } else {
                gexp_nums = Object.entries(player.expHistory)
                sum = 0
                map = gexp_nums.map(([key, value]) => {
                    sum += value
                    let sp = key.split(`-`)
                    let date = `${sp[2]}.${sp[1]}.${sp[0]}`
                    return `‚Ä¢ \`${date}\` - ${value} GEXP`
                }).join(`\n`)
            }



            embed = new EmbedBuilder()
                .setColor(Number(client.information.bot_color))
                .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
                .setThumbnail(this.member.user.displayAvatarURL())
                .setTimestamp(Date.now())
                .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
                .setDescription(`## –û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
–ù–∏–∫–Ω–µ–π–º: \`${userData.nickname}\`
__**–û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏**__:
${map}

**–û–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π**: ${sum} GEXP`)
        } else {
            embed = new EmbedBuilder()
                .setColor(Number(client.information.bot_color))
                .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
                .setThumbnail(this.member.user.displayAvatarURL())
                .setTimestamp(Date.now())
                .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
                .setDescription(`## –û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
–ù–∏–∫–Ω–µ–π–º: \`${userData.nickname}\`
__**–û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏**__:
\`–ù–µ–ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç!\``)
        }

        return {
            label: "–û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏",
            description: "–í–∞—à –æ–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π",
            emoji: "üî∞",
            value: "gexp",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getQuests() {
        const userData = await this.getUserData()
        let total = userData.quests.seasonal.stats.hw.total + userData.quests.seasonal.stats.ny.total + userData.quests.seasonal.stats.ea.total + userData.quests.seasonal.stats.su.total
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –ö–≤–µ—Å—Ç—ã –∏ –º–∞—Ä–∞—Ñ–æ–Ω—ã
__**–ú–∞—Ä–∞—Ñ–æ–Ω**__
\`–í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å—Ç–∞–¥–∏–π\` - ${userData.quests.marathon.stats.total_stages}
\`–ü—Ä–æ–π–¥–µ–Ω–æ —Ä–∞–∑\` - ${userData.quests.marathon.stats.total_mar}

__**–ó–∞–¥–∞–Ω–∏—è –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω–æ–≤**__
\`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π\` - ${userData.quests.veterans.stats.total}

__**–ö–≤–µ—Å—Ç—ã "–ù–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ"**__
\`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π\` - ${userData.quests.kings.stats.total}/4\\*
\\*–ó–∞–¥–∞–Ω–∏–µ —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è

__**–ó–∞–¥–∞–Ω–∏—è –ú–∞—Ä—Å–∞**__
\`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π\` - ${userData.quests.mars.stats.total}

__**–°–µ–∑–æ–Ω–Ω–æ–µ**__
\`–•—ç–ª–ª–æ—É–∏–Ω—Å–∫–∏–µ –∫–≤–µ—Å—Ç—ã\` - ${userData.quests.seasonal.stats.hw.total}
\`–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –∫–≤–µ—Å—Ç—ã\` - ${userData.quests.seasonal.stats.ny.total}
\`–ü–∞—Å—Ö–∞–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã\` - ${userData.quests.seasonal.stats.ea.total}
\`–õ–µ—Ç–Ω–∏–µ –∫–≤–µ—Å—Ç—ã\` - ${userData.quests.seasonal.stats.su.total}
__**\`–í—Å–µ–≥–æ\`**__ - ${total}`)

        return {
            label: "–ö–≤–µ—Å—Ç—ã –∏ –º–∞—Ä–∞—Ñ–æ–Ω",
            description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –∫–≤–µ—Å—Ç–æ–≤/–∑–∞–¥–∞–Ω–∏–π/—ç—Ç–∞–ø–æ–≤ –º–∞—Ä–∞—Ñ–æ–Ω–∞",
            emoji: "üí™",
            value: "quests",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getShops() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –≥–∏–ª—å–¥–∏–∏
\`–ö—É–ø–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.buys.normal + userData.buys.king + userData.buys.activity} —à—Ç.
\`–ö—É–ø–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –æ–±—ã—á–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\` - ${userData.buys.normal} —à—Ç.
\`–ö—É–ø–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\` - ${userData.buys.king} —à—Ç.
\`–ö—É–ø–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\` - ${userData.buys.activity} —à—Ç.
\`–ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Ä—É–º–±–∏–∫–æ–≤\` - ${userData.buys.total_sum} <:Rumbik:883638847056003072>
\`–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –±–∏–ª–µ—Ç–æ–≤\` - ${userData.buys.total_tickets} üè∑

\`–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.sell.constellation + userData.sell.comet + userData.sell.other} —à—Ç.
\`–ü—Ä–æ–¥–∞–Ω–æ —Å–æ–∑–≤–µ–∑–¥–∏–π\` - ${userData.sell.constellation} —à—Ç.
\`–ü—Ä–æ–¥–∞–Ω–æ –∫–æ–º–µ—Ç\` - ${userData.sell.comet} —à—Ç.
\`–ü—Ä–æ–¥–∞–Ω–æ –¥—Ä—É–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤\` - ${userData.sell.other} —à—Ç.
\`–ü—Ä–æ–¥–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å—É–º–º—É\` - ${userData.sell.total_sum} <:Rumbik:883638847056003072>`)

        return {
            label: "–ú–∞–≥–∞–∑–∏–Ω—ã –≥–∏–ª—å–¥–∏–∏",
            description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫/–ø—Ä–æ–¥–∞–∂ –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö",
            emoji: "üí∞",
            value: "shops",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getMultipliers() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –ú–Ω–æ–∂–∏—Ç–µ–ª–∏
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ–ø—ã—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\` - ${userData.pers_act_boost}x
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤\` - ${userData.pers_rank_boost}x
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ä—É–º–±–∏–∫–æ–≤\` - ${userData.pers_rumb_boost}x
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\` - ${userData.shop_costs}x
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\` - ${userData.act_costs}x
\`–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\` - ${userData.king_costs}x

## –®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏
\`–û–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.common}x
\`–ù–µ–æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.uncommon}x
\`–†–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.rare}x
\`–≠–ø–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.epic}x
\`–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.legendary}x
\`–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.mythical}x
\`–£–ª—å—Ç—Ä–∞—Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.RNG}x`)

        return {
            label: "–ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –∏ —à–∞–Ω—Å—ã",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –º–Ω–æ–∂–∏—Ç–µ–ª—è—Ö –∏ —à–∞–Ω—Å–∞—Ö",
            emoji: "üî∫",
            value: "boosters",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getCustomColor() {
        const userData = await this.getUserData()
        const guild = await this.client.guilds.fetch(userData.guildid);
        let colorRole = await guild.roles.fetch(userData.custom_color?.role ? userData.custom_color.role : `1`)
        if (!colorRole) colorRole = `–ù–µ —Å–æ–∑–¥–∞–Ω–∞`
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ü–≤–µ—Ç
\`–ù–∞–ª–∏—á–∏–µ\` - ${userData.custom_color.created ? `–°–æ–∑–¥–∞–Ω` : `–ù–µ —Å–æ–∑–¥–∞–Ω`}
\`–¶–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥\` - ${userData.custom_color?.hex ? userData.custom_color?.hex : `–¶–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`}
\`–ò–º—è —Ä–æ–ª–∏\` - ${userData.custom_color?.custom_name ? userData.custom_color?.custom_name : `–õ–ò–ß–ù–´–ô –¶–í–ï–¢`} 
\`–†–æ–ª—å\` - ${colorRole}`)

        return {
            label: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ü–≤–µ—Ç",
            description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º —Ü–≤–µ—Ç–µ",
            emoji: "üü£",
            value: "colors",
            embed: embed
        }

    }
    /**
     * @deprecated Since v2.18.0. Everything now shows in Multipliers Menu.
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getChances() {
        const userData = await this.getUserData()
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏
\`–û–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.common}x
\`–ù–µ–æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.uncommon}x
\`–†–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.rare}x
\`–≠–ø–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.epic}x
\`–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.legendary}x
\`–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.mythical}x
\`–£–ª—å—Ç—Ä–∞—Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã\` - ${userData.box_chances.RNG}x`)

        return {
            label: "–®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏",
            description: "–í–∞—à–∏ —à–∞–Ω—Å—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é —Ä–µ–¥–∫–æ—Å—Ç—å –≤ –∫–æ—Ä–æ–±–∫–∞—Ö",
            emoji: "üé±",
            value: "chances",
            embed: embed
        }

    }
    /**
     * 
     * @returns The object, including information for StringSelectMenuBuilder and Embed with information.
     */
    async getAboutMember() {
        const userData = await this.getUserData()
        let day
        let month
        if (userData.birthday.day < 10) day = `0${userData.birthday.day}`
        else day = `${userData.birthday.day}`

        if (userData.birthday.month == 1) month = `—è–Ω–≤–∞—Ä—è`
        else if (userData.birthday.month == 2) month = `—Ñ–µ–≤—Ä–∞–ª—è`
        else if (userData.birthday.month == 3) month = `–º–∞—Ä—Ç–∞`
        else if (userData.birthday.month == 4) month = `–∞–ø—Ä–µ–ª—è`
        else if (userData.birthday.month == 5) month = `–º–∞—è`
        else if (userData.birthday.month == 6) month = `–∏—é–Ω—è`
        else if (userData.birthday.month == 7) month = `–∏—é–ª—è`
        else if (userData.birthday.month == 8) month = `–∞–≤–≥—É—Å—Ç–∞`
        else if (userData.birthday.month == 9) month = `—Å–µ–Ω—Ç—è–±—Ä—è`
        else if (userData.birthday.month == 10) month = `–æ–∫—Ç—è–±—Ä—è`
        else if (userData.birthday.month == 11) month = `–Ω–æ—è–±—Ä—è`
        else if (userData.birthday.month == 12) month = `–¥–µ–∫–∞–±—Ä—è`

        let bday = `${day} ${month} ${userData.birthday.year}`
        let timestamp = `<t:${Math.round(userData.joinedGuild / 1000)}:f>`
        const embed = new EmbedBuilder()
            .setColor(Number(client.information.bot_color))
            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${this.member.user.username}`)
            .setThumbnail(this.member.user.displayAvatarURL())
            .setTimestamp(Date.now())
            .setFooter({ text: "–ê–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞" })
            .setDescription(`## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ
\`–ò–º—è\` - ${userData.displayname.name}
\`–í–æ–∑—Ä–∞—Å—Ç\` - ${userData.age} –ª–µ—Ç
\`Minecraft Nickname\` - \`${userData.nickname ? userData.nickname : "–ù–µ–ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç!"}\`
\`–î–∞—Ç–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è\` - ${timestamp}
\`–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è\` - ${bday}`)

        return {
            label: "–û–± —É—á–∞—Å—Ç–Ω–∏–∫–µ",
            description: "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ –≥–∏–ª—å–¥–∏–∏",
            emoji: "‚ùî",
            value: "about",
            embed: embed
        }

    }
    /**
     * 
     * @returns Array of all data about user profile (including informations for select menus and embeds)
     */
    async getAllProfile() {
        const general = await this.getGeneral()
        const progress = await this.getProgress()
        const elems = await this.getElements()
        const achs = await this.getAchievements()
        const perks = await this.getPerks()
        const gexp = await this.getGexp()
        const quests = await this.getQuests()
        const shops = await this.getShops()
        const mults = await this.getMultipliers()
        const color = await this.getCustomColor()
        const about = await this.getAboutMember()

        return [general, progress, elems, achs, perks, gexp, quests, shops, mults, color, about]
    }
}


module.exports = {
    UserProfile
}