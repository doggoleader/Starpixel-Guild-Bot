const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

const { User } = require(`../../schemas/userdata`);
const chalk = require(`chalk`);
const ch_list = require(`../../discord structure/channels.json`)
const { calcActLevel, getLevel } = require(`../../functions`)
const linksInfo = require(`../../discord structure/links.json`);

async function autoComplete(interaction, client) {

    const focusedValue = interaction.options.getFocused();
    const choices = ['–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', '–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤', '–†—É–º–±–∏–∫–∏', '–ë–∏–ª–µ—Ç—ã', '–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã'];
    const filtered = choices.filter(choice => choice.toLowerCase().includes(focusedValue.toLowerCase()));;
    await interaction.respond(
        filtered.map(choice => ({ name: choice, value: choice })),
    );
}
/**
 * 
 * @param {import("discord.js").ChatInputCommandInteraction} interaction Interaction
 * @param {import("../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        const embed = new EmbedBuilder()
            .setAuthor({
                name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
            })
            .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`320880176416161802`).name}\`!`)
            .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
            .setColor(`DarkRed`)
            .setTimestamp(Date.now())

        if (!interaction.member.roles.cache.has(`320880176416161802`)) return interaction.reply({
            embeds: [embed],
            ephemeral: true
        })
        const member = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
        if (!member.roles.cache.has(`504887113649750016`)) return interaction.reply({
            content: `–î–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–∏–ª—å–¥–∏–∏!`,
            ephemeral: true
        })
        const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`);
        const userData = await User.findOne({ userid: user.id })
        switch (interaction.options.getString(`—Ç–∏–ø`)) {
            case `–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {

                const total = calcActLevel(0, userData.level, userData.exp)

                const value = interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! ${total} < ${value}`)
                if (total < value) return interaction.reply({
                    embeds: [not_possible]
                })

                let cur_exp = userData.exp - interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                let cur_level = userData.level
                let total_exp = calcActLevel(0, cur_level, cur_exp)
                let level_exp = getLevel(total_exp)
                let level = level_exp[0], exp = level_exp[1]

                userData.level = level
                userData.exp = exp
                userData.save();
                client.ActExp(userData.userid);

                await interaction.reply({
                    content: `–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üåÄ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}!`,
                    ephemeral: true
                })
                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.exp} –æ–ø—ã—Ç–∞ –∏ ${userData.level} —É—Ä–æ–≤–µ–Ω—å.`))
            };

                break;
            case `–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤`: {

                userData.rank -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.rank} < 0)`)
                if (userData.rank < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                await interaction.reply({
                    content: `–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üí† —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤!`,
                    ephemeral: true
                })

                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rank} –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤.`))

            }

                break;
            case `–†—É–º–±–∏–∫–∏`: {

                userData.rumbik -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–º–±–∏–∫–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.rumbik} < 0)`)
                if (userData.rumbik < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                await interaction.reply({
                    content: `–£–±—Ä–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}<:Rumbik:883638847056003072> —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤!`,
                    ephemeral: true
                })
                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª —Ä—É–º–±–∏–∫–∏]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.rumbik} —Ä—É–º–±–∏–∫–æ–≤.`))
            }

                break;

            case `–ë–∏–ª–µ—Ç—ã`: {

                userData.tickets -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.tickets} < 0)`)
                if (userData.tickets < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                await interaction.reply({
                    content: `–í—ã–¥–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üè∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.tickets} –±–∏–ª–µ—Ç–æ–≤!`,
                    ephemeral: true
                })

                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª –±–∏–ª–µ—Ç—ã]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.tickets} –±–∏–ª–µ—Ç–æ–≤.`))
            }

                break;
            case `–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã`: {

                userData.visited_games -= interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                const not_possible = new EmbedBuilder()
                    .setColor(`DarkRed`)
                    .setTitle(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ!`)
                    .setTimestamp(Date.now())
                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                    .setDescription(`–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0! (${userData.visited_games} < 0)`)
                if (userData.visited_games < 0) return interaction.reply({
                    embeds: [not_possible]
                })
                userData.save();
                await interaction.reply({
                    content: `–í—ã–¥–∞–Ω–æ ${interaction.options.getNumber(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)}üé≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user}! –£ –Ω–µ–≥–æ —Ç–µ–ø–µ—Ä—å ${userData.visited_games} –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä!`,
                    ephemeral: true
                })

                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.green(`[${user.username} –ø–æ—Ç–µ—Ä—è–ª —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã]`) + chalk.gray(`: –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ${userData.visited_games} –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–≥—Ä.`))
            }

                break;


            default: {
                await interaction.reply({
                    content: `–î–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö!`,
                    ephemeral: true
                })
            }
                break;
        }
    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        let options = interaction?.options.data.map(a => {
            return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
        })
        await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
        await admin.send(`=> ${e}.
**–ö–æ–º–∞–Ω–¥–∞**: \`${interaction.commandName}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
        await admin.send(`‚óæ`)
    }

}
module.exports = {
    category: `admin_only`,
    plugin: {
        id: "items",
        name: "–ü—Ä–µ–¥–º–µ—Ç—ã"
    },
    data: new SlashCommandBuilder()
        .setName(`remove`)
        .setDescription(`–£–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`)
        .setDMPermission(false)
        .addStringOption(option => option
            .setName(`—Ç–∏–ø`)
            .setDescription(`–¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞`)
            .setAutocomplete(true)
            .setRequired(true)
        )
        .addUserOption(option => option
            .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç.`)
            .setRequired(true)
        )
        .addNumberOption(option => option
            .setName(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ä–∞–µ–º–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.`)
            .setRequired(true)
        ),
    autoComplete,
    execute
}