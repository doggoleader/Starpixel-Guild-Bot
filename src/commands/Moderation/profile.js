const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ActionRowBuilder, ButtonStyle, ComponentType, StringSelectMenuBuilder, ChannelType, UserSelectMenuBuilder, AttachmentBuilder, ApplicationFlagsBitField } = require('discord.js');
const fetch = require(`node-fetch`);
const wait = require(`node:timers/promises`).setTimeout
const api = process.env.hypixel_apikey;
const { User } = require(`../../schemas/userdata`)
const { Guild } = require(`../../schemas/guilddata`)
const { Apply } = require(`../../schemas/applications`)
const { Birthday } = require(`../../schemas/birthday`)
const chalk = require(`chalk`);
const prettyMilliseconds = require(`pretty-ms`); //–î–û–ë–ê–í–ò–¢–¨ –í –î–†–£–ì–ò–ï
const ch_list = require(`../../discord structure/channels.json`);
const { calcActLevel, getLevel, rankName, monthName, convertToRoman } = require(`../../functions`);
const linksInfo = require(`../../discord structure/links.json`)
const fs = require(`fs`)
const rolesInfo = require(`../../discord structure/roles.json`);
const { UserProfile, GuildProgress } = require(`../../misc_functions/Exporter`)

module.exports = {
    category: `items`,
    plugin: {
        id: "items",
        name: "–ü—Ä–µ–¥–º–µ—Ç—ã"
    },
    data: new SlashCommandBuilder()
        .setName(`profile`)
        .setDescription(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞`)
        .setDMPermission(true)
        .addSubcommand(subcommand => subcommand
            .setName(`create`)
            .setDescription(`–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞`)
            .addUserOption(option => option
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Discord`)
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName(`update`)
            .setDescription(`–û–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`delete`)
            .setDescription(`–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞`)
            .addStringOption(option => option
                .setName(`id`)
                .setDescription(`ID –≤ Discord`)
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName(`reset`)
            .setDescription(`–°–±—Ä–æ—Å–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (–í–ª–∞–¥—ã–∫–∞+)`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`updateall`)
            .setDescription(`–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`settings`)
            .setDescription(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è`)
        )
        .addSubcommand(subcommand => subcommand
            .setName(`info`)
            .setDescription(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ`)
            .addUserOption(o => o
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName(`getgexp`)
            .setDescription(`–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ GEXP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü`)
            .addUserOption(o => o
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ GEXP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`)
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName(`addtoinventory`)
            .setDescription(`–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`)
            .addUserOption(o => o
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç`)
                .setRequired(true)
            )
            .addRoleOption(o => o
                .setName(`—Ä–æ–ª—å`)
                .setDescription(`–†–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å`)
                .setRequired(true)
            )
            .addIntegerOption(o => o
                .setName(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`)
                .setDescription(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–∞—Ç—å`)
                .setRequired(false)
            )
        )
        .addSubcommand(sb => sb
            .setName(`removecolor`)
            .setDescription(`–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ü–≤–µ—Ç`)
            .addUserOption(o => o
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ü–≤–µ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (–±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä—É–º–±–∏–∫–æ–≤)`)
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName(`getprofile`)
            .setDescription(`–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON`)
            .addUserOption(o => o
                .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–æ—Ñ–∏–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å`)
                .setRequired(false)
            )
        ),

    async autoComplete(interaction, client) {
        switch (interaction.options.getSubcommandGroup()) {
            case `set`: {
                switch (interaction.options.getSubcommand()) {
                    case `string`: {
                        const focusedValue = interaction.options.getFocused();
                        const choices = [
                            'ID –≤ Discord',
                            'UUID –≤ Minecraft'
                        ];
                        const filtered = choices.filter(choice => choice.toLowerCase().includes(focusedValue.toLowerCase()));;
                        await interaction.respond(
                            filtered.map(choice => ({ name: choice, value: choice })),
                        );
                    }

                        break;

                    case `number`: {
                        const focusedValue = interaction.options.getFocused();
                        const choices = [
                            `–í–æ–∑—Ä–∞—Å—Ç`,
                            '–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                            '–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                            '–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤',
                            '–†—É–º–±–∏–∫–∏',
                            '–û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏ (GEXP)',
                            '–ë–∏–ª–µ—Ç—ã',
                            `–ú–µ–¥–∞–ª—å ü•á`,
                            `–ú–µ–¥–∞–ª—å ü•à`,
                            `–ú–µ–¥–∞–ª—å ü•â`,
                            '–¶–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ',
                            '–¶–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
                            `–¶–µ–Ω—ã –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ`,
                            `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä –æ–ø—ã—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`,
                            `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤`,
                            `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤`,
                            `–û–±—ã—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`,
                            `–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`,

                            `–ù–∞–≤—ã–∫ "–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–¥ –∑–µ–º–ª—ë–π" (–ó–µ–º–ª—è)`,
                            `–ù–∞–≤—ã–∫ "–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π" (–ó–µ–º–ª—è)`,
                            `–ù–∞–≤—ã–∫ "–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–æ—Ä–Ω—ã—Ö –ø–æ—Ä–æ–¥" (–ó–µ–º–ª—è)`,
                            `–ù–∞–≤—ã–∫ "–ü–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –≥–ª—É–±–∏–Ω–µ" (–í–æ–¥–∞)`,
                            `–ù–∞–≤—ã–∫ "–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ç–µ—á–µ–Ω–∏—è–º" (–í–æ–¥–∞)`,
                            `–ù–∞–≤—ã–∫ "–ü–æ–¥–≤–æ–¥–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ" (–í–æ–¥–∞)`,
                            `–ù–∞–≤—ã–∫ "–ó–∞—â–∏—Ç–∞ –æ—Ç –æ–≥–Ω—è" (–û–≥–æ–Ω—å)`,
                            `–ù–∞–≤—ã–∫ "–£–¥–∞—Ä –º–æ–ª–Ω–∏–∏" (–û–≥–æ–Ω—å)`,
                            `–ù–∞–≤—ã–∫ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–º–µ–Ω–µ–º" (–û–≥–æ–Ω—å)`,
                            `–ù–∞–≤—ã–∫ "–ü–æ–ª–µ—Ç –≤ –Ω–µ–±–µ—Å–∞—Ö" (–í–æ–∑–¥—É—Ö)`,
                            `–ù–∞–≤—ã–∫ "–ü–æ–≤–µ–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–æ–º" (–í–æ–∑–¥—É—Ö)`,
                            `–ù–∞–≤—ã–∫ "–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑" (–í–æ–∑–¥—É—Ö)`,

                            `–®–∞–Ω—Å—ã –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ –Ω–µ–æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ —ç–ø–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ –º–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,
                            `–®–∞–Ω—Å—ã –Ω–∞ —É–ª—å—Ç—Ä–∞—Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`,

                            `–ü–µ—Ä–∫ "–ü–æ–≤—ã—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤"`,
                            `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ"`,
                            `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"`,
                            `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –æ–±—ã—á–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ –≥–∏–ª—å–¥–∏–∏"`,
                            `–ü–µ—Ä–∫ "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"`,
                            `–ü–µ—Ä–∫ "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"`,
                            `–ü–µ—Ä–∫ "–£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞"`,
                            `–ü–µ—Ä–∫ "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤"`,

                            `–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã`

                        ];
                        const filtered = choices.filter(choice => choice.toLowerCase().includes(focusedValue.toLowerCase())).slice(0, 25);
                        await interaction.respond(
                            filtered.map(choice => ({ name: choice, value: choice })),
                        );
                    }

                        break;
                    case `boolean`: {
                        const focusedValue = interaction.options.getFocused();
                        const choices = [
                            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞',
                        ];
                        const filtered = choices.filter(choice => choice.toLowerCase().includes(focusedValue.toLowerCase()));;
                        await interaction.respond(
                            filtered.map(choice => ({ name: choice, value: choice })),
                        );
                    }

                        break;
                    default:
                        break;
                }
            }

                break;

            default:
                break;
        }


    },
    async execute(interaction, client) {
        try {
            switch (interaction.options.getSubcommand()) {
                case `create`: {
                    await interaction.deferReply({
                        fetchReply: true,
                        ephemeral: true
                    })
                    if (interaction.channel.type == ChannelType.DM) return interaction.editReply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    const user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                    const appData = await Apply.findOne({ userid: user.id, guildid: interaction.guild.id })
                    const realname = appData.que1
                    const playername = appData.que2

                    if (!interaction.member.roles.cache.has(`563793535250464809`)) {
                        const embed = new EmbedBuilder()
                            .setAuthor({
                                name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                            })
                            .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`563793535250464809`).name}\` –∏–ª–∏ –≤—ã—à–µ!`)
                            .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                            .setColor(`DarkRed`)
                            .setTimestamp(Date.now())

                        return interaction.editReply({
                            embeds: [embed],
                            ephemeral: true
                        })
                    }
                    else {
                        const thread = await interaction.guild.channels.fetch(appData.threadid)
                        await thread.setLocked(true).catch()
                        await thread.setArchived(true).catch()

                        const userData = new User({ userid: user.id, name: user.username })
                        const creator = await User.findOne({ userid: interaction.member.user.id }) || new User({ userid: interaction.member.user.id, name: interaction.member.user.username })

                        if (creator.cooldowns.prof_create > Date.now()) return interaction.editReply({
                            embeds: [
                                new EmbedBuilder()
                                    .setAuthor({
                                        name: `–ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ!`
                                    })
                                    .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                                    .setColor(`DarkRed`)
                                    .setTimestamp(Date.now())
                                    .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.prof_create - Date.now(), { secondsDecimalDigits: 0 })}!`)
                            ],
                            ephemeral: true
                        });
                        const memberDM = await interaction.guild.members.fetch(user.id)
                        if (appData.onlinemode == 'yes') {
                            let response = await fetch(`https://api.hypixel.net/player?name=${playername}`, {
                                headers: {
                                    "API-Key": api,
                                    "Content-Type": "application/json"
                                }
                            })
                            try {
                                let json = await response.json()

                                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ù–∏–∫ –∏–≥—Ä–æ–∫–∞ - ${json.player.displayname}, UUID - ${json.player.uuid}`))
                                userData.nickname = json.player.displayname;
                                userData.markModified(`nickname`)
                                userData.uuid = json.player.uuid;
                                userData.onlinemode = true;
                                userData.markModified(`uuid`)
                                userData.cooldowns.prof_update = Date.now() + (1000 * 60 * 60 * 24)
                                creator.cooldowns.prof_create = Date.now() + (1000 * 60)
                                creator.markModified(`prof_create`)
                            } catch (error) {
                                userData.onlinemode = false;
                                await interaction.followUp({
                                    content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${memberDM} –Ω–µ –∏–º–µ–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Minecraft (–í–≤–µ–¥–µ–Ω–æ: \`${playername}\`), –ø–æ—ç—Ç–æ–º—É –æ–Ω –Ω–µ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º, —Ç—Ä–µ–±—É—é—â–∏–º –ª–∏—Ü–µ–Ω–∑–∏—é Minecraft!`
                                })
                                await memberDM.send({
                                    content: `–£ –≤–∞—Å –Ω–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Minecraft (–í–≤–µ–¥–µ–Ω–æ: \`${playername}\`), –ø–æ—ç—Ç–æ–º—É —É –≤–∞—Å –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º, —Ç—Ä–µ–±—É—é—â–∏–º –ª–∏—Ü–µ–Ω–∑–∏—é Minecraft!`
                                }).catch()
                                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ò–≥—Ä–æ–∫–∞ —Å –Ω–∏–∫–Ω–µ–π–º–æ–º ${playername} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç `));
                            }
                        } else {
                            userData.onlinemode = false;
                        }

                        try {
                            const age = Number(appData.que3)
                            if (age <= 0) return interaction.editReply({
                                content: `–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!`,
                                ephemeral: true
                            })
                            userData.age = age
                        } catch (e) {
                            await interaction.followUp({
                                content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ \`${appData.que3}\`! –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ <#849516805529927700>, —Å–æ–æ–±—â–∏–≤ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç!`
                            })
                            await memberDM.send({
                                content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ \`${appData.que3}\`! –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ <#849516805529927700>, —Å–æ–æ–±—â–∏–≤ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç!`
                            }).catch()
                        }

                        userData.name = user.username
                        userData.displayname.name = realname

                        const roles = [
                            `553593731953983498`,
                            `504887113649750016`,
                            `721047643370815599`,
                            `702540345749143661`,
                            `746440976377184388`,
                            `722523773961633927`,
                            `849533128871641119`,
                            `709753395417972746`,
                            `722533819839938572`,
                            `722523856211935243`,
                            `1020403089943040040`
                        ]
                        const randombox = [
                            `819930814388240385`,
                            `510932601721192458`,
                            `521248091853291540`,
                            `584673040470769667`,
                            `893932177799135253`,
                            `925799156679856240`,
                            `1007718117809606736`,
                            `992820494900412456`
                        ]
                        let rloot1 = randombox[Math.floor(Math.random() * randombox.length)];
                        await memberDM.roles.add(roles).catch()
                        await memberDM.roles.add(rloot1).catch()
                        const channel = await interaction.guild.channels.fetch(ch_list.apply)
                        const msg = await channel.messages.fetch(appData.applicationid)
                        const buttons = new ActionRowBuilder()
                            .addComponents(
                                new ButtonBuilder()
                                    .setCustomId(`app_decline`)
                                    .setEmoji(`‚ùå`)
                                    .setLabel(`–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É`)
                                    .setStyle(ButtonStyle.Danger)
                                    .setDisabled(true)
                            )
                            .addComponents(
                                new ButtonBuilder()
                                    .setCustomId(`app_waiting`)
                                    .setEmoji(`üïë`)
                                    .setLabel(`–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ`)
                                    .setStyle(ButtonStyle.Secondary)
                                    .setDisabled(true)
                            )
                            .addComponents(
                                new ButtonBuilder()
                                    .setCustomId(`app_accept`)
                                    .setEmoji(`‚úÖ`)
                                    .setLabel(`–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É`)
                                    .setStyle(ButtonStyle.Success)
                                    .setDisabled(true)
                            )
                        const embed = new EmbedBuilder()
                            .setTitle(`–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${interaction.user.username}`)
                            .setColor(Number(linksInfo.bot_color))
                            .setDescription(`**–ó–ê–Ø–í–ö–ê**
1. –ò–º—è - \`${appData.que1}\`.
2. –ù–∏–∫–Ω–µ–π–º - \`${appData.que2 ? appData.que2 : "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞"}\`.
3. –í–æ–∑—Ä–∞—Å—Ç - \`${appData.que3}\`.
4. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª - \`${appData.que4}\`.
5. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ - \`${appData.que5}\`.
        
6. –ü–æ—á–µ–º—É –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –∏–º–µ–Ω–Ω–æ –∫ –Ω–∞–º –≤ –≥–∏–ª—å–¥–∏—é?
\`${appData.que6}\`.
        
7. –ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏?
\`${appData.que7}\`.

**–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—Ñ–∏—Ü–µ—Ä–æ–º ${interaction.member}**
**–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏**: ${appData.status}`)
                            .setFooter({ text: `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏ –ª—é–±–æ–º —Ä–µ—à–µ–Ω–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.` })
                        await msg.edit({
                            embeds: [embed],
                            components: [buttons]
                        })

                        userData.joinedGuild = Date.now()
                        const ch = await interaction.guild.channels.fetch(ch_list.hypixelThread)
                        await ch.send(`/g invite ${playername}`)
                        appData.status = `–ü—Ä–∏–Ω—è—Ç–∞`
                        await creator.save()
                        await userData.save()
                        await appData.save()
                        client.PersJoinGuild(userData.userid)
                        if (memberDM.user.id !== `491343958660874242`) {
                            await memberDM.setNickname(`„Äå${userData.displayname.rank}„Äç ${userData.displayname.ramka1}${userData.displayname.name}${userData.displayname.ramka2}${userData.displayname.suffix} ${userData.displayname.symbol}‚îá ${userData.displayname.premium}`)
                        }

                        const progress = new GuildProgress(memberDM, client);
                        await progress.getAndUpdateUserPoints();


                        const success = new EmbedBuilder()
                            .setAuthor({
                                name: `–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`
                            })
                            .setColor(Number(linksInfo.bot_color))
                            .setDescription(`–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)} (${userData.nickname}) –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –í —Ç–µ—á–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏!`)
                            .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                            .setTimestamp(Date.now())

                        await interaction.editReply({
                            embeds: [success]
                        })
                        let d = 1, dd = 1, ddd = 1
                        const embed1 = new EmbedBuilder()
                            .setColor(Number(linksInfo.bot_color))
                            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`)
                            .setTimestamp(Date.now())
                            .setThumbnail(interaction.guild.iconURL())
                            .setDescription(
                                `**${d++}.** –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)} (\`${userData.nickname}\`) –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ‚úÖ
**${d++}.** –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–æ–ª–∏ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã. ‚úÖ
**${d++}.** –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –≤ –≤–∏–¥–µ <@&${rloot1}> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω. ‚úÖ
**${d++}.** –ù–∏–∫–Ω–µ–π–º –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –∏ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–∏—Å—Ç–µ–º–µ –Ω–∏–∫–Ω–µ–π–º–æ–≤. ‚úÖ
**${d++}.** –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º Hypixel –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. ‚úÖ
**${d++}.** –ü—Ä–æ—á–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. ‚úÖ

**${dd++}.** –û–∂–∏–¥–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞ Hypixel. üïë
**${dd++}.** –û–∂–∏–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞. üïë`)

                        const embed2 = new EmbedBuilder()
                            .setColor(Number(linksInfo.bot_color))
                            .setTitle(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–∏–ª—å–¥–∏—é Starpixel!`)
                            .setTimestamp(Date.now())
                            .setThumbnail(user.displayAvatarURL())
                            .setDescription(`${interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–∏–ª—å–¥–∏—é!

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–º Discord —Å–µ—Ä–≤–µ—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/start\`!

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–∏–∂–µ –¥–∞—Ç—É –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY (DD - –¥–µ–Ω—å, MM - –º–µ—Å—è—Ü, YYYY - –≥–æ–¥).

–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≥–∏–ª—å–¥–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.news}>! –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –µ—â—ë —Ä–∞–∑ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≤ <#${ch_list.rules}>!

–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É </help:1047205512971817040>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥!

–ï—Å–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è –≥–∏–ª—å–¥–∏–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞ –≤–∞—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –í–∞—Å —Å–∫–æ—Ä–æ –¥–æ–±–∞–≤—è—Ç!`)
                        await interaction.guild.channels.cache.get(ch_list.main).send({
                            content: `@here`,
                            embeds: [embed1, embed2],
                            allowedMentions: {
                                parse: ["everyone"]
                            }
                        })
                        console.log(chalk.blackBright(`[${new Date()}]`) + chalk.cyan(`[–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö]`) + chalk.gray(`: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.name} (${userData.nickname}) –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`))

                    }
                }

                    break;
                case `update`: {
                    const { user } = interaction;
                    const guild = await client.guilds.fetch(`320193302844669959`)
                    const member = await guild.members.fetch(user.id)
                    if (!member || !member.roles.cache.has(`504887113649750016`)) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥–∏–ª—å–¥–∏–∏!`
                    })
                    const userData = await User.findOne({ userid: user.id });
                    if (userData.cooldowns.prof_update > Date.now()) return interaction.reply({
                        embeds: [new EmbedBuilder()
                            .setAuthor({
                                name: `–ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ!`
                            })
                            .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                            .setColor(`DarkRed`)
                            .setTimestamp(Date.now())
                            .setDescription(`–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${prettyMilliseconds(userData.cooldowns.prof_update - Date.now(), { secondsDecimalDigits: 0 })}!`)
                        ],
                        ephemeral: true
                    })
                    userData.name = user.username
                    if (userData.onlinemode) {
                        let response = await fetch(`https://api.hypixel.net/player?uuid=${userData.uuid}`, {
                            headers: {
                                "API-Key": api,
                                "Content-Type": "application/json"
                            }
                        })
                        if (response.ok) {
                            try {
                                let json = await response.json()

                                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ù–∏–∫ –∏–≥—Ä–æ–∫–∞ - ${json.player.displayname}, UUID - ${json.player.uuid}. –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω!`))
                                userData.nickname = json.player.displayname;
                                userData.cooldowns.prof_update = Date.now() + (1000 * 60 * 60)

                            } catch (error) {
                                await interaction.reply({
                                    embeds: [new EmbedBuilder().setAuthor({ name: `–û—à–∏–±–∫–∞!` }).setDescription(`–ò–≥—Ä–æ–∫ ${userData.uuid} –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≥–∏–ª—å–¥–∏–∏ Starpixel!`).setThumbnail(`https://i.imgur.com/6IE3lz7.png`).setColor(`DarkRed`).setTimestamp(Date.now())],
                                    ephemeral: true
                                });
                                console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ò–≥—Ä–æ–∫–∞ —Å UUID ${userData.uuid} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`));
                                return;
                            }
                        }
                    }

                    client.rank_update();
                    client.AutoElements();
                    client.AutoStars();
                    client.Boosters();
                    client.checkSubscription();
                    client.Discounts();
                    client.AutoMythical();
                    client.removeNonPremiumColors();
                    client.updatenicks();
                    client.GuildGamesCheckRewards(member);
                    client.ActExp(userData.userid);

                    userData.save()
                    const totalexp = calcActLevel(0, userData.level, userData.exp)
                    if (userData.onlinemode) {
                        const success = new EmbedBuilder()
                            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!`)
                            .setColor(Number(linksInfo.bot_color))
                            .setTimestamp(Date.now())
                            .setThumbnail(`https://minotar.net/helm/${userData.uuid}.png`)
                            .setDescription(`–ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${user} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!

**–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:**
–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - ${userData.exp} (–ø–æ–¥—Ä–æ–±–Ω–µ–µ: </profile info:1055546254609879095>)
–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - ${userData.level}
–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞ - ${totalexp}

–û–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤ - ${userData.rank}
–†—É–º–±–∏–∫–æ–≤ - ${userData.rumbik}
–ë–∏–ª–µ—Ç–æ–≤ - ${userData.tickets}
–û–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–∏ - ${userData.gexp}`)
                        await interaction.reply({
                            embeds: [success]
                        })
                    } else {
                        const success = new EmbedBuilder()
                            .setTitle(`–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!`)
                            .setColor(Number(linksInfo.bot_color))
                            .setTimestamp(Date.now())
                            .setDescription(`–ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${user} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!

**–ü—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:**
–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - ${userData.exp} (–ø–æ–¥—Ä–æ–±–Ω–µ–µ: </profile info:1055546254609879095>)
–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - ${userData.level}
–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞ - ${totalexp}

–û–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤ - ${userData.rank}
–†—É–º–±–∏–∫–æ–≤ - ${userData.rumbik}
–ë–∏–ª–µ—Ç–æ–≤ - ${userData.tickets}
–û–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –≤ –Ω–∞–ª–∏—á–∏–∏ - ${userData.gexp}`)
                        await interaction.reply({
                            embeds: [success]
                        })
                    }

                }
                    break;

                case `delete`: {
                    if (interaction.channel.type == ChannelType.DM) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    const id = interaction.options.getString(`id`)
                    const user = await interaction.guild.members.fetch(id)
                    const userData = await User.findOne({ userid: id })
                    const birthdayData = await Birthday.findOne({ userid: id })
                    if (!interaction.member.roles.cache.has(`320880176416161802`)) {
                        const embed = new EmbedBuilder()
                            .setAuthor({
                                name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                            })
                            .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`320880176416161802`).name}\`!
–ù–æ –≤—ã –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \`/profile update\``)
                            .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                            .setColor(`DarkRed`)
                            .setTimestamp(Date.now())

                        return interaction.reply({
                            embeds: [embed],
                            ephemeral: true
                        })
                    }
                    else if (interaction.member.roles.cache.has(`320880176416161802`)) {
                        const delete_button = new ActionRowBuilder()
                            .addComponents(
                                new ButtonBuilder()
                                    .setCustomId(`delete_button`)
                                    .setEmoji(`üö´`)
                                    .setLabel(`–£–¥–∞–ª–∏—Ç—å`)
                                    .setStyle(ButtonStyle.Danger)
                            )
                        const delete_embed = new EmbedBuilder()
                            .setColor(`DarkRed`)
                            .setTitle(`–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.user.username}?`)
                            .setDescription(`**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!**
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ç–æ—Ç –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å? –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–∏–ª—å–¥–∏–∏, —É–¥–∞–ª—è—Ç—å –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å **–ó–ê–ü–†–ï–©–ï–ù–û**! –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–æ–∫–∏–Ω—É–ª –≥–∏–ª—å–¥–∏—é, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ __10 —Å–µ–∫—É–Ω–¥__ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Ç–µ—Ä—è–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
\`–†—É–º–±–∏–∫–∏, –æ–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤, –æ–ø—ã—Ç –∏ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏, –±–∏–ª–µ—Ç—ã –∏ —É–º–µ–Ω–∏—è!\``)
                            .setFooter({ text: `–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üö´ –£–¥–∞–ª–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥.` })
                        await interaction.reply({
                            embeds: [delete_embed],
                            components: [delete_button]
                        })

                        const filter = i => i.customId === 'delete_button';

                        interaction.channel.awaitMessageComponent({ filter, componentType: ComponentType.Button, time: 10000 })
                            .then(async (i) => {
                                if (i.user.id === interaction.member.user.id) {
                                    delete_button.components[0].setDisabled(true)
                                    let name = userData.name
                                    let nickname = userData.nickname
                                    await interaction.editReply({
                                        embeds: [delete_embed],
                                        components: [delete_button]
                                    })
                                    try {
                                        const member = await interaction.guild.members.fetch(userData.userid)
                                        if (member) {
                                            await interaction.guild.members.edit(member, {
                                                roles: [],
                                                nick: `${member.user.username}`
                                            })
                                        }

                                    } catch (e) {

                                    }
                                    let stream = await fs.createWriteStream(`./src/files/Database/Profile.json`)
                                    let json = JSON.stringify(userData, (_, v) => typeof v === 'bigint' ? v.toString() : v)
                                    stream.once('open', function (fd) {
                                        stream.write(json);
                                        stream.end();
                                    });

                                    let interactionChannel = await interaction.guild.channels.fetch(`1114239308853936240`)
                                    let attach = new AttachmentBuilder()
                                        .setFile(`./src/files/Database/Profile.json`)
                                        .setName(`Profile.json`)

                                    await interactionChannel.send({
                                        content: `**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**: \`${userData.displayname.name}\`
**ID Discord**: \`${userData.userid}\`
**–ù–∏–∫–Ω–µ–π–º**: \`${userData.nickname}\`
**UUID**: \`${userData.onlinemode ? userData.uuid : null}\``,
                                        files: [attach]
                                    })

                                    userData.delete()
                                    birthdayData.delete()
                                    await i.reply({
                                        content: `–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${name} (\`${nickname}\`) –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!`
                                    })
                                    console.log(chalk.blackBright(`[${new Date()}]`) + chalk.cyan(`[–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö]`) + chalk.gray(`: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${name} (\`${nickname}\`) –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!`))

                                } else {
                                    i.reply({ content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–æ—á–∫—É!`, ephemeral: true });
                                }
                            })
                            .catch(async (err) => {
                                await delete_button.components[0]
                                    .setDisabled(true)
                                    .setLabel(`–û—Ç–º–µ–Ω–µ–Ω–æ`)


                                delete_embed
                                    .setTitle(`–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–º–µ–Ω–µ–Ω–æ –∏–∑-–∑–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏!`)
                                    .setFields({
                                        name: `\u200b`,
                                        value: `\u200b`
                                    })
                                    .setDescription(`–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–º–µ–Ω–µ–Ω–æ –∏–∑-–∑–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏!`)
                                    .setFooter({ text: `–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /profile delete –µ—â—ë —Ä–∞–∑, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É!` })
                                await interaction.editReply({
                                    embeds: [delete_embed],
                                    components: [delete_button]
                                })
                                console.log(err)
                            });

                    }
                }
                    break;

                case `reset`: {
                    if (interaction.channel.type == ChannelType.DM) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    const { member, user, guild } = interaction

                    const embed = new EmbedBuilder()
                        .setColor(Number(linksInfo.bot_color))
                        .setDescription(`# –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
–ò—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É, –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –∑–∞–Ω–æ–≤–æ. –°—É—â–µ—Å—Ç–≤—É–µ—Ç 2 —Ç–∏–ø–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è:
1. **–°–±—Ä–æ—Å–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–∞–ª—å—à–µ.** –í—ã–±–∏—Ä–∞—è –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ –¥–∏—Å–∫–æ—Ä–¥–µ –≥–∏–ª—å–¥–∏–∏ –¥–∞–ª—å—à–µ, –ø–æ–ª—É—á–∏–≤ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª–µ–µ –∫—Ä—É—Ç—ã–µ –Ω–∞–≥—Ä–∞–¥—ã.
–ù–∞–∂–∞–≤ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:
- –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–≤–æ–π –æ–ø—ã—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ —Ä–∞–Ω–≥
- –í—Å–µ —ç–º–æ—Ü–∏–∏
- –í—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
- –í—Å–µ –∫–æ—Ä–æ–±–∫–∏
- –í—Å–µ—Ö –ø–∏—Ç–æ–º—Ü–µ–≤ –∏ —Å—Ç–∏—Ö–∏–∏
- –ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä–∞–¥—ã
- –¢–∞–ª–∏—Å–º–∞–Ω—ã
- –ó–≤–µ–∑–¥—ã, —Å–æ–∑–≤–µ–∑–¥–∏—è, –∫–æ–º–µ—Ç—ã
- –ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–º–∫–∏ –∏ –∑–Ω–∞—á–∫–∏
- –†—É–º–±–∏–∫–∏
- –ë–∏–ª–µ—Ç—ã
- –ú–µ–¥–∞–ª–∏
- –ö–æ–ª–ª–µ–∫—Ü–∏–∏
- –°–æ–±—Ä–∞–Ω–Ω—ã–µ –∑–≤—ë–∑–¥–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—ã
- –ü–µ—Ä–∫–∏
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã (–∫—Ä–æ–º–µ –ø–æ–¥–ø–∏—Å–∫–∏ VIP)
- –ú–Ω–æ–∂–∏—Ç–µ–ª–∏
- –®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏
- –ü–æ–¥–ø–∏—Å–∫–∏ (–∫—Ä–æ–º–µ VIP)
- –°–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã

–í—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã:
- –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≥–∏–ª—å–¥–∏–∏
- –û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
- –ü–æ–¥–ø–∏—Å–∫–∞ VIP (–µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è)
- –ù–∞–≥—Ä–∞–¥–Ω—ã–µ —Ä–æ–ª–∏

2. **–°–±—Ä–æ—Å–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –Ω—É–ª—è.** –í—ã–±–∏—Ä–∞—è –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã **–ü–û–õ–ù–û–°–¢–¨–Æ** —Å–æ—Ç—Ä—ë—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –≤–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≥–æ!
:warning: **–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã!** –ï—Å–ª–∏ –≤—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–º—ë—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ —Ä–∞–∑–≤–∏—Ç–∏–µ, –∫–æ—Ç–æ—Ä–∞—è —É –≤–∞—Å —Å–µ–π—á–∞—Å! __–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –≥–∏–ª—å–¥–∏–∏ –∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É —Ä–∞–∑–≤–∏—Ç–∏—è!__`)

                    const buttons = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`reset_some`)
                                .setLabel(`–°–±—Ä–æ—Å–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –¥–∞–ª—å—à–µ`)
                                .setStyle(ButtonStyle.Primary)
                        )
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`reset_everything`)
                                .setLabel(`–°–±—Ä–æ—Å–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ —Å –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –Ω—É–ª—è`)
                                .setStyle(ButtonStyle.Danger)
                        )

                    const msg = await interaction.reply({
                        embeds: [embed],
                        components: [buttons],
                        ephemeral: true,
                        fetchReply: true
                    })

                    const collector = await msg.createMessageComponentCollector()

                    collector.on(`collect`, async (i) => {
                        if (i.customId == `reset_some`) {
                            if (!member.roles.cache.has(`849695880688173087`) && !member.roles.cache.has(`992122876394225814`) && !member.roles.cache.has(`992123014831419472`) && !member.roles.cache.has(`992123019793276961`)) return i.reply({
                                content: `–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–ª–∞–¥—ã–∫–æ–π –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –≤—ã—à–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–Ω–æ–ø–∫—É!`,
                                ephemeral: true
                            });
                            await i.deferUpdate()
                            const userDataRolesClear = await User.findOneAndUpdate({ userid: user.id }, {
                                $set: {
                                    roles: []
                                }
                            })
                            userDataRolesClear.save()
                            const exceptions = [`567689925143822346`, `883617976790700032`, `883617966174896139`, `320880176416161802`, `563793535250464809`, `504887113649750016`, `721047643370815599`, `702540345749143661`, `746440976377184388`, `722523773961633927`, `660236704971489310`, `740241985155366973`, `730891493375475786`, `764198086738051092`, `856866046387683338`, `849533128871641119`, `584811233035681814`, `584811236085071882`, `584811238178029612`, `584811238626689024`, `610131860445724713`, `584811242498293781`, `584811242703552512`, `584811243496275988`, `584811243794202626`, `584811380117471252`, `585175150501036043`, `585175165315579904`, `585175168251592714`, `585175171154051083`, `610133244393816074`, `610133972034387983`, `585175188187119638`, `610131863683465246`, `610131866963673118`, `610131868045672615`, `610132199848804379`, `610132217204572190`, `694914070632988712`, `694914070746234970`, `694914072960958555`, `694914074630422555`, `694914073376194740`, `694914074550468758`, `694914075460894791`, `697796942134116382`, `709753395417972746`, `722533819839938572`, `722523856211935243`, `850336260265476096`, `1017131191771615243`, `1020400007989444678`, `1020400017330163712`, `1020400015300120638`, `1020400022350725122`, `1020400026045915167`, `1020400024397565962`, `1020400030575763587`, `1020400034853957713`, `1020400032651952168`, `1020400043154485278`, `1020400047260696647`, `1020400045251633163`, `1020400055812886529`, `1020400060636344440`, `1020400058543374388`, `1132678509307904210`]
                            let it = 0

                            for (let exception of exceptions) {

                                exception = exceptions[it]
                                if (member.roles.cache.has(exception)) {
                                    const userDataUpd = await User.findOneAndUpdate({
                                        userid: user.id
                                    }, {
                                        $push: {
                                            roles: exception
                                        }
                                    })
                                    userDataUpd.save()
                                    it++
                                } else {
                                    it++
                                }
                            }

                            await member.roles.set([`930520087797051452`, `553593731953983498`, `721047643370815599`, `702540345749143661`, `746440976377184388`, `722523773961633927`, `849533128871641119`, `709753395417972746`, `722533819839938572`, `722523856211935243`, `504887113649750016`])
                            const userData = await User.findOne({ userid: user.id })

                            userData.rank = 0
                            userData.rumbik = 0

                            userData.elements.diving = 0
                            userData.elements.eagle_eye = 0
                            userData.elements.fast_grow = 0
                            userData.elements.fire_resistance = 0
                            userData.elements.flame = 0
                            userData.elements.flying = 0
                            userData.elements.lightning = 0
                            userData.elements.mountains = 0
                            userData.elements.resistance = 0
                            userData.elements.respiration = 0
                            userData.elements.underground = 0
                            userData.elements.wind = 0

                            userData.displayname.ramka1 = ``
                            userData.displayname.ramka2 = ``
                            userData.displayname.suffix = ``
                            userData.displayname.rank = `ü¶ã`
                            userData.displayname.symbol = `üë§`

                            userData.gexp = 0
                            userData.tickets = 0
                            userData.medal_1 = 0
                            userData.medal_2 = 0
                            userData.medal_3 = 0
                            userData.stacked_items = []

                            userData.perks.act_discount = 0
                            userData.perks.change_items = 0
                            userData.perks.king_discount = 0
                            userData.perks.rank_boost = 0
                            userData.perks.sell_items = 0
                            userData.perks.store_items = 0
                            userData.perks.shop_discount = 0
                            userData.perks.temp_items = 0
                            userData.perks.ticket_discount = 0

                            userData.bank.account_type = '–°—Ç–∞—Ä—Ç–æ–≤—ã–π'
                            userData.bank.balance = 0
                            userData.bank.expire = Date.now()
                            userData.bank.max_balance = 500
                            userData.bank.multiplier = 1.05
                            userData.bank.opened = false

                            userData.upgrades.bank_account_tier = 1
                            userData.upgrades.inventory_size_tier = 1
                            userData.upgrades.max_purchases_tier = 1
                            userData.upgrades.max_sells_tier = 1
                            userData.upgrades.inventory_size = 10
                            userData.upgrades.max_purchases = 15
                            userData.upgrades.max_sells = 15

                            userData.rank_number = 0
                            userData.shop_costs = 1
                            userData.act_costs = 1
                            userData.king_costs = 1

                            userData.box_chances.common = 1
                            userData.box_chances.uncommon = 1
                            userData.box_chances.rare = 1
                            userData.box_chances.epic = 1
                            userData.box_chances.legendary = 1
                            userData.box_chances.mythical = 1
                            userData.box_chances.RNG = 1

                            userData.times_reset += 1

                            userData.save()

                            await i.member.roles.add(userData.roles).catch()

                            const back_roles = new ActionRowBuilder()
                                .addComponents(
                                    new ButtonBuilder()
                                        .setCustomId(`back_roles`)
                                        .setEmoji(`‚öú`)
                                        .setLabel(`–í–µ—Ä–Ω—É—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏`)
                                        .setStyle(ButtonStyle.Primary)
                                )

                            const msg2 = await interaction.guild.channels.cache.get(ch_list.main).send({
                                content: `:black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:

:tada: ${user} —Ä–µ—à–∏–ª —Å–±—Ä–æ—Å–∏—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –î–∏—Å–∫–æ—Ä–¥–µ –≥–∏–ª—å–¥–∏–∏ **–∑–∞–Ω–æ–≤–æ**!           
–ï–≥–æ –∂–¥—É—Ç –∫—Ä—É—Ç—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–∂–µ–ª–∞–µ–º –µ–º—É —É–¥–∞—á–∏!

:black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:`,
                                //components: [back_roles]
                            })

                            await interaction.deleteReply();
                            /* const filter = int => int.customId === 'back_roles';

                            const col = msg2.createMessageComponentCollector({ filter });
                            col.on('collect', async (int) => {
                                if (int.user.id === interaction.member.user.id) {
                                    const roles = userData.roles
                                    await int.member.roles.add(roles).catch()

                                    back_roles.components[0].setDisabled(true)
                                    await int.reply({
                                        content: `–í—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏ —Å–≤–æ–∏ —Ä–æ–ª–∏!`,
                                        ephemeral: true
                                    })
                                    console.log(chalk.blackBright(`[${new Date()}]`) + chalk.cyan(`[–°–ë–†–û–° –ü–†–û–§–ò–õ–Ø]`) + chalk.gray(`: ${user.username} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏!`))
                                    await msg2.edit({
                                        components: [back_roles]
                                    })
                                    col.stop()

                                } else {
                                    await int.reply({ content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–æ—á–∫—É!`, ephemeral: true });
                                }
                            }) */
                        } else if (i.customId == `reset_everything`) {
                            if (!member.roles.cache.has(`992123019793276961`)) return i.reply({
                                content: `–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–≤–µ–ª–∏—Ç–µ–ª–µ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –≤—ã—à–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–Ω–æ–ø–∫—É!`,
                                ephemeral: true
                            });
                            const but2 = new ActionRowBuilder()
                                .addComponents(
                                    new ButtonBuilder()
                                        .setCustomId(`reset_yes`)
                                        .setLabel(`–î–∞`)
                                        .setStyle(ButtonStyle.Success)
                                )
                                .addComponents(
                                    new ButtonBuilder()
                                        .setCustomId(`reset_no`)
                                        .setLabel(`–ù–µ—Ç`)
                                        .setStyle(ButtonStyle.Danger)
                                )

                            const msg2 = await i.reply({
                                content: `## –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ –≥–∏–ª—å–¥–∏–∏ —Å –ê–ë–°–û–õ–Æ–¢–ù–û–ì–û –ù–£–õ–Ø!
–ù–∞–∂–∏–º–∞—è "–î–∞", –≤—ã **–ü–û–õ–ù–û–°–¢–¨–Æ** —Å–æ—Ç—Ä—ë—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –≤–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≥–æ!
:warning: **–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã!** –ï—Å–ª–∏ –≤—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–∞–∂–º—ë—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ —Ä–∞–∑–≤–∏—Ç–∏–µ, –∫–æ—Ç–æ—Ä–∞—è —É –≤–∞—Å —Å–µ–π—á–∞—Å! __–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –≥–∏–ª—å–¥–∏–∏ –∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É —Ä–∞–∑–≤–∏—Ç–∏—è!__

–ï—Å–ª–∏ –≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É –ø–æ –æ—à–∏–±–∫–µ –∏–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å, –Ω–∞–∂–º–∏—Ç–µ "–ù–µ—Ç"!`,
                                components: [but2],
                                ephemeral: true,
                                fetchReply: true
                            })

                            const col2 = await msg2.createMessageComponentCollector()
                            col2.on('collect', async (int) => {
                                if (int.customId == `reset_yes`) {
                                    await int.deferReply({ ephemeral: true, fetchReply: true })
                                    const userData = await User.findOne({ userid: user.id })
                                    await member.roles.set([`553593731953983498`, `721047643370815599`, `702540345749143661`, `746440976377184388`, `722523773961633927`, `849533128871641119`, `709753395417972746`, `722533819839938572`, `722523856211935243`, `504887113649750016`])

                                    let stream = await fs.createWriteStream(`./src/files/Database/Profile.json`)
                                    let json = JSON.stringify(userData, (_, v) => typeof v === 'bigint' ? v.toString() : v)
                                    stream.once('open', function (fd) {
                                        stream.write(json);
                                        stream.end();
                                    });

                                    let interactionChannel = await interaction.guild.channels.fetch(`1114239308853936240`)
                                    let attach = new AttachmentBuilder()
                                        .setFile(`./src/files/Database/Profile.json`)
                                        .setName(`Profile.json`)

                                    await interactionChannel.send({
                                        content: `**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**: \`${userData.displayname.name}\`
**ID Discord**: \`${userData.userid}\`
**–ù–∏–∫–Ω–µ–π–º**: \`${userData.nickname}\`
**UUID**: \`${userData.onlinemode ? userData.uuid : null}\``,
                                        files: [attach]
                                    })
                                    //userData.age = age
                                    //userData.nickname = json.player.displayname;
                                    //userData.uuid = json.player.uuid;
                                    //userData.onlinemode = true;
                                    //userData.cooldowns.prof_update = Date.now() + (1000 * 60 * 60 * 24)
                                    //userData.name = user.username
                                    //userData.displayname.name = realname
                                    //userData.joinedGuild
                                    const age = userData.age,
                                        guildid = userData.guildid,
                                        userid = userData.userid,
                                        nickname = userData.nickname,
                                        uuid = userData.uuid,
                                        onlinemode = userData.onlinemode,
                                        cd = userData.cooldowns.prof_update,
                                        name = userData.name,
                                        displ_name = userData.displayname.name,
                                        joinedGuild = userData.joinedGuild,
                                        times_reset = userData.times_reset,
                                        gexp_info = userData.gexp_info,
                                        warn_info = userData.warn_info,
                                        warns_number = userData.warns_number

                                    const newUserData = new User({ userid: userid, guildid: guildid })
                                    newUserData.age = age
                                    newUserData.nickname = nickname
                                    newUserData.uuid = uuid
                                    newUserData.onlinemode = onlinemode
                                    newUserData.name = name
                                    newUserData.displayname.name = displ_name
                                    newUserData.cooldowns.prof_update = cd
                                    newUserData.joinedGuild = joinedGuild
                                    newUserData.gexp_info = gexp_info
                                    newUserData.warn_info = warn_info
                                    newUserData.warns_number = warns_number
                                    newUserData.times_reset = times_reset + 1
                                    newUserData.save()
                                    userData.delete()

                                    await int.editReply({
                                        content: `–í—ã **–ø–æ–ª–Ω–æ—Å—Ç—å—é** —Å–±—Ä–æ—Å–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å! –í–∞—à –Ω–∏–∫–Ω–µ–π–º –æ–±–Ω–æ–≤–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!
                                        
–í–∞—à —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –∞—Ä—Ö–∏–≤–µ –≥–∏–ª—å–¥–∏–∏. –ï—Å–ª–∏ –≤–∞–º –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –î–º–∏—Ç—Ä–∏—é!`,
                                        ephemeral: true
                                    })
                                    await interaction.guild.channels.cache.get(ch_list.main).send({
                                        content: `:black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:

:tada: ${user} —Ä–µ—à–∏–ª **–ü–û–õ–ù–û–°–¢–¨–Æ –ù–ê–ß–ê–¢–¨ –ó–ê–ù–û–í–û –†–ê–ó–í–ò–¢–ò–ï –í –î–ò–°–ö–û–†–î–ï!**     @everyone
–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –Ω–∞—á–∞–ª–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Ç–∞–∫, –±—É–¥—Ç–æ –∏–≥—Ä–æ–∫ —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—Å—Ç—É–ø–∏–ª –≤ –≥–∏–ª—å–¥–∏—é!

:black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:    :black_medium_small_square:`,
                                        allowedMentions: {
                                            parse: ["everyone"]
                                        }
                                        //components: [back_roles]
                                    })
                                    col2.stop()
                                    collector.stop();
                                    await i.deleteReply();
                                    await interaction.deleteReply();
                                } else if (int.customId == `reset_no`) {
                                    await int.reply({
                                        content: `–í—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è. –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –µ—â—ë —Ä–∞–∑, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \`/profile reset\` –µ—â—ë —Ä–∞–∑!`,
                                        ephemeral: true
                                    })
                                    col2.stop()
                                    collector.stop();
                                    await i.deleteReply();
                                    await interaction.deleteReply();
                                }
                            })
                        }
                    })




                }
                    break;

                case "updateall": {
                    if (interaction.channel.type == ChannelType.DM) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                        })
                        .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`320880176416161802`).name}\`!
–ù–æ –≤—ã –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \`/profile update\``)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    if (!interaction.member.roles.cache.has(`320880176416161802`)) return interaction.reply({
                        embeds: [embed]
                    })
                    await interaction.reply({
                        content: `–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥–∏–ª—å–¥–∏–∏..`,
                        fetchReply: true
                    })
                    const userDatas = await User.find({ guildid: interaction.guild.id })
                    let b = 0
                    let update
                    for (let userData of userDatas) {
                        userData = userDatas[b]

                        const member = await interaction.guild.members.fetch(userData.userid)
                        client.GuildGamesCheckRewards(member)
                        client.ActExp(userData.userid)
                        userData.name = member.user.username
                        if (userData.onlinemode) {
                            let response = await fetch(`https://api.hypixel.net/player?uuid=${userData.uuid}`, {
                                headers: {
                                    "API-Key": api,
                                    "Content-Type": "application/json"
                                }
                            })
                            if (response.ok) {
                                try {
                                    let json = await response.json()

                                    console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ù–∏–∫ –∏–≥—Ä–æ–∫–∞ - ${json.player.displayname}, UUID - ${json.player.uuid}. –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω!`))
                                    userData.nickname = json.player.displayname;
                                    userData.markModified(`nickname`)

                                } catch (error) {
                                    await interaction.reply({
                                        embeds: [new EmbedBuilder().setAuthor({ name: `–û—à–∏–±–∫–∞!` }).setDescription(`–ò–≥—Ä–æ–∫ ${userData.uuid} –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≥–∏–ª—å–¥–∏–∏ Starpixel!`).setThumbnail(`https://i.imgur.com/6IE3lz7.png`).setColor(`DarkRed`).setTimestamp(Date.now())],
                                        ephemeral: true
                                    });
                                    console.log(chalk.blackBright(`[${new Date()}]`) + chalk.hex(`#FFA500`)(`[HypixelAPI]`) + chalk.gray(`: –ò–≥—Ä–æ–∫–∞ —Å UUID ${userData.uuid} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`));
                                    return;
                                }
                            }
                        }


                        if (userData.onlinemode) {
                            update = new EmbedBuilder()
                                .setTitle(`–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ . . .`)
                                .setColor(Number(linksInfo.bot_color))
                                .setDescription(`–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥–∏–ª—å–¥–∏–∏ Starpixel!

–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${userData.userid}> - \`${userData.nickname}\` (UUID: \`${userData.onlinemode ? userData.uuid : null}\`) 
**–ü—Ä–æ–≥—Ä–µ—Å—Å**: ${b + 1}/${userDatas.length} - ${(Math.round(((b + 1) / (userDatas.length)) * 100))}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ . . .`)
                                .setTimestamp(Date.now())
                                .setThumbnail(`https://minotar.net/helm/${userData.uuid}.png`)
                        } else {
                            update = new EmbedBuilder()
                                .setTitle(`–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ . . .`)
                                .setColor(Number(linksInfo.bot_color))
                                .setDescription(`–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥–∏–ª—å–¥–∏–∏ Starpixel!

–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${userData.userid}> - \`${userData.nickname}\` (UUID: \`${userData.onlinemode ? userData.uuid : null}\`) 
**–ü—Ä–æ–≥—Ä–µ—Å—Å**: ${b + 1}/${userDatas.length} - ${(Math.round(((b + 1) / (userDatas.length)) * 100))}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ . . .`)
                                .setTimestamp(Date.now())
                        }



                        await interaction.editReply({
                            embeds: [update],
                            fetchReply: true
                        })
                        userData.save()
                        b++
                        await wait(1100)
                    }
                    client.rank_update();
                    client.AutoElements();
                    client.AutoStars();
                    client.Boosters();
                    client.checkSubscription();
                    client.Discounts();
                    client.AutoMythical();
                    client.removeNonPremiumColors();
                    client.updatenicks();

                    update = new EmbedBuilder()
                        .setTitle(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`)
                        .setColor(Number(linksInfo.bot_color))
                        .setDescription(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!

–¢–µ–ø–µ—Ä—å –Ω–∏–∫–Ω–µ–π–º—ã, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∏ –ø—Ä–æ—á–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–Ω–∞–ª <#932203255335899177> –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
**–ü—Ä–æ–≥—Ä–µ—Å—Å**: ${b}/${userDatas.length} - ${(Math.round(((b) / (userDatas.length)) * 100))}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ . . .`)
                        .setTimestamp(Date.now())
                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                    await interaction.editReply({
                        embeds: [update]
                    })
                }
                    break;
                case `info`: {
                    const msg = await interaction.deferReply({
                        fetchReply: true
                    })
                    let user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.user;
                    const guild = interaction.guild
                    let intMember = interaction.member
                    let member = await guild.members.fetch(user.id)
                    if (user.id !== interaction.user.id) {
                        let targetData = await User.findOne({ userid: user.id })
                        if (targetData.pers_settings.profile_view == false) {
                            let executorData = await User.findOne({ userid: interaction.user.id })
                            if (executorData.staff_pos < 2 || (targetData.staff_pos > executorData.staff_pos)) {
                                await interaction.editReply({
                                    content: `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!`,
                                    fetchReply: true
                                })
                                await wait(10000)
                                await interaction.deleteReply()
                                return
                            }
                        }
                    }

                    if (!intMember || !intMember.roles.cache.has(`504887113649750016`)) {
                        await interaction.editReply({
                            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥–∏–ª—å–¥–∏–∏!`,
                            fetchReply: true
                        })
                        await wait(10000)
                        await interaction.deleteReply()
                        return
                    }
                    if (user.bot) {
                        await interaction.editReply({
                            content: `${user} —è–≤–ª—è–µ—Ç—Å—è –±–æ—Ç–æ–º, –∞ –∑–Ω–∞—á–∏—Ç —É –Ω–µ–≥–æ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è :'(`,
                            fetchReply: true
                        })
                        await wait(10000)
                        await interaction.deleteReply()
                        return
                    }
                    if (!member.roles.cache.has(`504887113649750016`) || !member) {
                        await interaction.editReply({
                            content: `–î–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–∏–ª—å–¥–∏–∏!`,
                            fetchReply: true
                        })
                        await wait(10000)
                        await interaction.deleteReply()
                        return
                    }

                    let profile = new UserProfile(member, client)
                    let userData = await profile.getUserData()
                    if (!userData) {
                        await interaction.editReply({
                            content: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ!`,
                            fetchReply: true
                        })
                        await wait(10000)
                        await interaction.deleteReply()
                        return
                    }

                    let profileData = await profile.getAllProfile();
                    let options = [];
                    for (let data of profileData) {
                        if (data.value == 'main') {
                            options.push({
                                label: data.label,
                                description: data.description,
                                emoji: data.emoji,
                                default: true,
                                value: data.value
                            })
                        } else {
                            options.push({
                                label: data.label,
                                description: data.description,
                                emoji: data.emoji,
                                default: false,
                                value: data.value
                            })
                        }
                    }

                    const selectMenu = new ActionRowBuilder()
                        .addComponents(
                            new StringSelectMenuBuilder()
                                .setCustomId(`profilemenu`)
                                .setPlaceholder(`–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å`)
                                .addOptions(options)
                        )

                    const userMenu = new ActionRowBuilder()
                        .addComponents(
                            new UserSelectMenuBuilder()
                                .setCustomId(`usermenu`)
                                .setMaxValues(1)
                                .setPlaceholder(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å`)
                        )


                    let main = await profileData.find(pf => pf.value == `main`).embed
                    await interaction.editReply({
                        embeds: [main],
                        components: [selectMenu, userMenu],
                        fetchReply: true
                    })

                    const collector = msg.createMessageComponentCollector()

                    collector.on(`collect`, async (i) => {
                        if (i.customId == `progress_info`) {
                            const msg3 = await i.deferReply({ fetchReply: true, ephemeral: true })
                            let progressData = await profile.getProgressInformation()
                            const but = new ActionRowBuilder()
                                .addComponents(
                                    new ButtonBuilder()
                                        .setLabel(`–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è`)
                                        .setStyle(ButtonStyle.Success)
                                        .setDisabled(true)
                                        .setCustomId(`progress_general`)
                                )
                                .addComponents(
                                    new ButtonBuilder()
                                        .setLabel(`–ù–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏`)
                                        .setStyle(ButtonStyle.Primary)
                                        .setDisabled(false)
                                        .setCustomId(`progress_roles`)
                                )
                                .addComponents(
                                    new ButtonBuilder()
                                        .setLabel(`–ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ —É–º–µ–Ω–∏—è`)
                                        .setStyle(ButtonStyle.Primary)
                                        .setDisabled(false)
                                        .setCustomId(`progress_perks`)
                                )
                                .addComponents(
                                    new ButtonBuilder()
                                        .setLabel(`–ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è`)
                                        .setStyle(ButtonStyle.Primary)
                                        .setDisabled(false)
                                        .setCustomId(`progress_upgrades`)
                                )
                            await i.editReply({
                                embeds: [progressData[0]],
                                components: [but],
                                ephemeral: true
                            })

                            const col2 = await msg3.createMessageComponentCollector()
                            col2.on('collect', async (int) => {
                                await but.components.forEach(comp => {
                                    if (comp.data.custom_id == int.customId) {
                                        comp.setDisabled(true)
                                        comp.setStyle(ButtonStyle.Success)
                                    } else {
                                        comp.setDisabled(false)
                                        comp.setStyle(ButtonStyle.Primary)
                                    }
                                })

                                if (int.customId == 'progress_general') {
                                    await int.update({
                                        embeds: [progressData[0]],
                                        components: [but],
                                        fetchReply: true,
                                        ephemeral: true
                                    })
                                } else if (int.customId == `progress_roles`) {
                                    await int.update({
                                        embeds: [progressData[1]],
                                        components: [but],
                                        fetchReply: true,
                                        ephemeral: true
                                    })
                                } else if (int.customId == `progress_perks`) {
                                    await int.update({
                                        embeds: [progressData[2]],
                                        components: [but],
                                        fetchReply: true,
                                        ephemeral: true
                                    })
                                } else if (int.customId == `progress_upgrades`) {
                                    await int.update({
                                        embeds: [progressData[3]],
                                        components: [but],
                                        fetchReply: true,
                                        ephemeral: true
                                    })
                                }
                            })
                        }
                        else if (i.customId == `profilemenu`) {
                            const value = i.values[0]
                            if (i.user.id == interaction.user.id) {
                                await selectMenu.components[0].options.forEach(option => {
                                    if (option.data.value == value) {
                                        option.data.default = true
                                    } else option.data.default = false
                                })
                                const embed = await profileData.find(pf => pf.value == value).embed
                                if (value == 'progress') {
                                    const button = new ActionRowBuilder()
                                        .addComponents(
                                            new ButtonBuilder()
                                                .setCustomId(`progress_info`)
                                                .setLabel(`–ü–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é`)
                                                .setStyle(ButtonStyle.Primary)
                                                .setEmoji(`üìÉ`)
                                        )
                                    await i.update({
                                        embeds: [embed],
                                        components: [button, selectMenu, userMenu]
                                    })
                                } else {
                                    await i.update({
                                        embeds: [embed],
                                        components: [selectMenu, userMenu]
                                    })
                                }
                            }
                            else if (i.user.id !== interaction.user.id) {
                                const msg2 = await i.deferReply({ ephemeral: true, fetchReply: true })
                                const embed = await profileData.find(pf => pf.value == value).embed
                                if (value == 'progress') {
                                    const button = new ActionRowBuilder()
                                        .addComponents(
                                            new ButtonBuilder()
                                                .setCustomId(`progress_info`)
                                                .setLabel(`–ü–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é`)
                                                .setStyle(ButtonStyle.Primary)
                                                .setEmoji(`üìÉ`)
                                        )
                                    await i.editReply({
                                        embeds: [embed],
                                        components: [button]
                                    })

                                    const col2 = await msg2.createMessageComponentCollector()

                                    col2.on('collect', async (int) => {
                                        let progressData = await profile.getProgressInformation()

                                        await int.reply({
                                            embeds: [progressData],
                                            ephemeral: true
                                        })
                                    })
                                } else {
                                    await i.editReply({
                                        embeds: [embed]
                                    })
                                }
                            }
                        } else if (i.customId == `usermenu`) {


                            if (interaction.user.id == i.user.id) {
                                await i.deferReply({ fetchReply: true, ephemeral: true })
                                const us = await guild.members.fetch(i.values[0])
                                user = us.user
                                member = us
                                if (user.id !== i.user.id) {
                                    let targetData = await User.findOne({ userid: user.id })
                                    if (targetData.pers_settings.profile_view == false) {
                                        let executorData = await User.findOne({ userid: i.user.id })
                                        if (executorData.staff_pos < 2 || (targetData.staff_pos > executorData.staff_pos)) {
                                            await i.editReply({
                                                content: `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!`,
                                                fetchReply: true
                                            })
                                            return
                                        }
                                    }
                                }
                                profile = new UserProfile(member, client)
                                userData = await profile.getUserData()
                                if (!userData) {
                                    await i.editReply({
                                        content: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ!`,
                                        fetchReply: true
                                    })
                                    return
                                }

                                profileData = await profile.getAllProfile();
                                main = await profileData.find(pf => pf.value == `main`).embed
                                await selectMenu.components[0].options.forEach(option => {
                                    if (option.data.value == `main`) {
                                        option.data.default = true
                                    } else option.data.default = false
                                })
                                await i.deleteReply()
                                await interaction.editReply({
                                    embeds: [main],
                                    components: [selectMenu, userMenu],
                                    fetchReply: true
                                })
                            } else if (interaction.user.id !== i.user.id) {
                                await i.deferReply({ fetchReply: true, ephemeral: true })
                                const us = await guild.members.fetch(i.values[0])

                                let userT = us.user
                                let memberT = us
                                if (userT.id !== i.user.id) {
                                    let targetData = await User.findOne({ userid: userT.id })
                                    if (targetData.pers_settings.profile_view == false) {
                                        let executorData = await User.findOne({ userid: i.user.id })
                                        if (executorData.staff_pos < 2 || (targetData.staff_pos > executorData.staff_pos)) {
                                            await i.editReply({
                                                content: `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!`,
                                                fetchReply: true
                                            })
                                            return
                                        }
                                    }
                                }
                                let profileT = new UserProfile(memberT, client)
                                let userDataT = await profileT.getUserData()
                                if (!userDataT) {
                                    await i.editReply({
                                        content: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ!`,
                                        fetchReply: true
                                    })
                                    await wait(10000)
                                    await i.deleteReply()
                                    return
                                }
                                let profileDataT = await profileT.getAllProfile();
                                let mainT = await profileDataT.find(pf => pf.value == `main`).embed

                                await i.editReply({
                                    embeds: [mainT],
                                    ephemeral: true
                                })
                            }

                        }
                    })
                }
                    break;
                case `getgexp`: {
                    if (interaction.channel.type == ChannelType.DM) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    if (!interaction.member.roles.cache.has(`563793535250464809`)) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
                        ephemeral: true
                    })
                    let user = interaction.options.getUser(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                    let member = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                    let userData = await User.findOne({ userid: user.id, guildid: interaction.guild.id })
                    if (!userData) return interaction.reply({
                        content: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ç–æ–≥–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –≤—ã–±—Ä–∞–ª–∏!`,
                        ephemeral: true
                    })
                    let sort1 = userData.gexp_info.sort((a, b) => {
                        let splA = a.date.split(`-`)
                        let splB = b.date.split(`-`)
                        let yearA = splA[0]
                        let yearB = splB[0]
                        return yearB - yearA
                    })
                    let sort2 = sort1.sort((a, b) => {
                        let splA = a.date.split(`-`)
                        let splB = b.date.split(`-`)
                        let monthA = splA[1]
                        let monthB = splB[1]
                        return monthB - monthA
                    })
                    let sort = sort2.sort((a, b) => {
                        let splA = a.date.split(`-`)
                        let splB = b.date.split(`-`)
                        let dayA = splA[2]
                        let dayB = splB[2]
                        return dayB - dayA
                    })
                    let curDate = new Date()
                    let n = curDate.getMonth() + 1
                    let m = curDate.getFullYear()
                    let filt = sort.filter(s => {
                        let spl = s.date.split(`-`)
                        let month = spl[1], year = spl[0]
                        return month == n && year == m
                    })
                    let monthSum = 0
                    let map = filt.map(info => {
                        let dates = info.date.split(`-`)
                        let day = dates[2], month = dates[1], year = dates[0]
                        monthSum += info.gexp
                        return `\`${day}.${month}.${year}\` - \`${info.gexp}\` GEXP`
                    })
                    let tr = sort.filter(s => {
                        let ntr = curDate.getMonth() + 1
                        let mtr = curDate.getFullYear()
                        if (ntr - 1 <= 0) {
                            ntr = 12
                            mtr = mtr - 1
                        }
                        let spl = s.date.split(`-`)
                        let month = spl[1], year = spl[0]
                        return month == ntr - 1 && year == mtr
                    })
                    let dis
                    if (tr.length <= 0) dis = true
                    else dis = false
                    let monthN = await monthName(n)
                    let embed = new EmbedBuilder()
                        .setTitle(`GEXP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.nickname}`)
                        .setThumbnail(user.displayAvatarURL())
                        .setColor(Number(linksInfo.bot_color))
                        .setTimestamp(Date.now())
                        .setDescription(`**${monthN}, ${m}**
${map.join(`\n`)}

**–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶**: \`${monthSum}\` GEXP`)
                    let buttons = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`prev`)
                                .setLabel(`–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü`)
                                .setEmoji(`‚¨Ö`)
                                .setStyle(ButtonStyle.Danger)
                                .setDisabled(dis)
                        )
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`next`)
                                .setLabel(`–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü`)
                                .setEmoji(`‚û°`)
                                .setStyle(ButtonStyle.Success)
                                .setDisabled(true)
                        )

                    let usSelect = new ActionRowBuilder()
                        .addComponents(
                            new UserSelectMenuBuilder()
                                .setCustomId(`user`)
                                .setPlaceholder(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, GEXP –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å`)
                                .setMaxValues(1)
                        )
                    let msg = await interaction.reply({
                        embeds: [embed],
                        components: [buttons, usSelect],
                        fetchReply: true
                    })

                    const collector = msg.createMessageComponentCollector()

                    collector.on('collect', async (i) => {
                        if (!i.member.roles.cache.has(`563793535250464809`)) return i.reply({
                            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
                            ephemeral: true
                        })
                        if (i.customId == `prev`) {
                            await i.deferUpdate()
                            const n_before = n
                            const m_before = m
                            tr = sort.filter(s => {
                                if (n_before - 1 <= 0) {
                                    n = 12
                                    m = m_before - 1
                                } else {
                                    n = n_before - 1
                                    m = m_before
                                }

                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == n && year == m
                            })
                            let tr1 = sort.filter(s => {
                                let ntr = n_before, mtr = m_before
                                if (ntr - 1 <= 0) {
                                    ntr = 11
                                    mtr = m_before - 1
                                } else {
                                    ntr = ntr - 2
                                    mtr = m_before
                                }
                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == ntr && year == mtr
                            })
                            monthN = await monthName(n)
                            let dis
                            if (tr1.length <= 0) dis = true
                            else dis = false
                            buttons.components[0].setDisabled(dis)
                            buttons.components[1].setDisabled(false)
                            monthSum = 0
                            map = tr.map(info => {
                                let dates = info.date.split(`-`)
                                let day = dates[2], month = dates[1], year = dates[0]
                                monthSum += info.gexp
                                return `\`${day}.${month}.${year}\` - \`${info.gexp}\` GEXP`
                            })
                            embed.setDescription(`**${monthN}, ${m}**
${map.join(`\n`)}

**–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶**: \`${monthSum}\` GEXP`)

                            await interaction.editReply({
                                embeds: [embed],
                                components: [buttons, usSelect],
                                fetchReply: true
                            })
                        } else if (i.customId == `next`) {
                            await i.deferUpdate()
                            const n_before = n
                            const m_before = m
                            tr = sort.filter(s => {
                                if (n_before + 1 > 12) {
                                    n = 1
                                    m = m_before + 1
                                } else {
                                    n = n_before + 1
                                    m = m_before
                                }
                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == n && year == m
                            })
                            let tr1 = sort.filter(s => {
                                let ntr = n, mtr = m
                                if (ntr + 1 >= 12) {
                                    ntr = 1
                                    mtr = m_before + 1
                                } else {
                                    ntr = ntr + 1
                                    mtr = m_before
                                }
                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == ntr && year == mtr
                            })
                            monthN = await monthName(n)
                            let dis
                            if (tr1.length <= 0) dis = true
                            else dis = false
                            buttons.components[1].setDisabled(dis)
                            buttons.components[0].setDisabled(false)
                            monthSum = 0
                            map = tr.map(info => {
                                let dates = info.date.split(`-`)
                                let day = dates[2], month = dates[1], year = dates[0]
                                monthSum += info.gexp
                                return `\`${day}.${month}.${year}\` - \`${info.gexp}\` GEXP`
                            })
                            embed.setDescription(`**${monthN}, ${m}**
${map.join(`\n`)}

**–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶**: \`${monthSum}\` GEXP`)

                            await interaction.editReply({
                                embeds: [embed],
                                components: [buttons, usSelect],
                                fetchReply: true
                            })
                        } else if (i.customId == `user`) {
                            member = await i.guild.members.fetch(i.values[0])
                            userData = await User.findOne({ userid: member.user.id, guildid: i.guild.id })
                            if (!userData) return i.reply({
                                content: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ç–æ–≥–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –≤—ã–±—Ä–∞–ª–∏!`,
                                ephemeral: true
                            })
                            await i.deferUpdate()
                            sort1 = userData.gexp_info.sort((a, b) => {
                                let splA = a.date.split(`-`)
                                let splB = b.date.split(`-`)
                                let yearA = splA[0]
                                let yearB = splB[0]
                                return yearB - yearA
                            })
                            sort2 = sort1.sort((a, b) => {
                                let splA = a.date.split(`-`)
                                let splB = b.date.split(`-`)
                                let monthA = splA[1]
                                let monthB = splB[1]
                                return monthB - monthA
                            })
                            sort = sort2.sort((a, b) => {
                                let splA = a.date.split(`-`)
                                let splB = b.date.split(`-`)
                                let dayA = splA[2]
                                let dayB = splB[2]
                                return dayB - dayA
                            })
                            curDate = new Date()
                            n = curDate.getMonth() + 1
                            m = curDate.getFullYear()
                            filt = sort.filter(s => {
                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == n && year == m
                            })
                            monthSum = 0
                            map = filt.map(info => {
                                let dates = info.date.split(`-`)
                                let day = dates[2], month = dates[1], year = dates[0]
                                monthSum += info.gexp
                                return `\`${day}.${month}.${year}\` - \`${info.gexp}\` GEXP`
                            })
                            tr = sort.filter(s => {
                                let ntr = curDate.getMonth() + 1
                                let mtr = curDate.getFullYear()
                                if (ntr - 1 <= 0) {
                                    ntr = 12
                                    mtr = mtr - 1
                                }
                                let spl = s.date.split(`-`)
                                let month = spl[1], year = spl[0]
                                return month == ntr - 1 && year == mtr
                            })
                            if (tr.length <= 0) dis = true
                            else dis = false
                            monthN = await monthName(n)
                            embed.setTitle(`GEXP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.nickname}`)
                                .setThumbnail(member.user.displayAvatarURL())
                                .setColor(Number(linksInfo.bot_color))
                                .setTimestamp(Date.now())
                                .setDescription(`**${monthN}, ${m}**
${map.join(`\n`)}

**–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶**: \`${monthSum}\` GEXP`)
                            buttons.components[1].setDisabled(true)
                            buttons.components[0].setDisabled(dis)

                            await interaction.editReply({
                                embeds: [embed],
                                components: [buttons, usSelect],
                                fetchReply: true
                            })
                        }
                    })
                }
                    break;
                case 'settings': {
                    const { selectmenu, embed, UserProfile } = require(`../../misc_functions/Exporter`)

                    await interaction.reply({
                        embeds: [embed],
                        components: [selectmenu],
                        ephemeral: true
                    })
                }
                    break;

                case 'removecolor': {
                    if (!interaction.member.roles.cache.has(`320880176416161802`)) return interaction.reply({
                        content: `–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥–∏–ª—å–¥–∏–∏, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
                        ephemeral: true
                    })
                    const member = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
                    const userData = await User.findOne({ userid: member.user.id, guildid: guild.id })
                    if (!userData) return interaction.reply({
                        content: `–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥–∏–ª—å–¥–∏–∏ –∏ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ—Ç–æ–º!`,
                        ephemeral: true
                    })
                    if (userData.custom_color.created === false) return interaction.reply({
                        content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª —Å–≤–æ–π —Ü–≤–µ—Ç!`,
                        ephemeral: true
                    })
                    const colorRole = await interaction.guild.roles.fetch(userData.custom_color.role)
                    await colorRole.delete()
                    userData.custom_color.created = false
                    userData.custom_color.hex = ``
                    userData.custom_color.role = ``
                    userData.save()
                    await interaction.reply({
                        content: `–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ü–≤–µ—Ç –∏–≥—Ä–æ–∫–∞ ${member}!`,
                        ephemeral: true
                    })
                }
                    break;
                case 'addtoinventory': {
                    await interaction.deferReply({ fetchReply: true, ephemeral: true })
                    if (!interaction.member.roles.cache.has(`320880176416161802`)) return interaction.reply({
                        content: `–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥–∏–ª—å–¥–∏–∏, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
                        ephemeral: true
                    })
                    const member = interaction.options.getMember('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                    const role = interaction.options.getRole(`—Ä–æ–ª—å`)
                    let amount = interaction.options.getInteger(`–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
                    if (!amount) amount = 1
                    const userData = await User.findOne({ userid: member.user.id })
                    if (!userData) return interaction.reply({
                        content: `–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥–∏–ª—å–¥–∏–∏ –∏ –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ—Ç–æ–º!`,
                        ephemeral: true
                    })
                    for (let i = 0; i < amount; i++) {
                        await userData.stacked_items.push(role.id);
                    }
                    userData.save()
                    await interaction.editReply({
                        content: `–£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å ${role} (\`${amount} —à—Ç.\` —É—á–∞—Å—Ç–Ω–∏–∫—É ${member}!`
                    })
                }
                    break;
                case 'getprofile': {
                    const member = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`) || interaction.member
                    const userData = await User.findOne({
                        userid: interaction.user.id
                    })
                    if (member.user.id !== interaction.member.user.id && userData.staff_pos < 3) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞!`,
                        ephemeral: true
                    })
                    const profile = await User.findOne({
                        userid: member.user.id
                    })
                    let stream = await fs.createWriteStream(`./src/files/Database/Profile.json`)
                    let json = JSON.stringify(profile, (_, v) => typeof v === 'bigint' ? v.toString() : v)
                    stream.once('open', function (fd) {
                        stream.write(json);
                        stream.end();
                    });
                    let attach = new AttachmentBuilder()
                        .setFile(`./src/files/Database/Profile.json`)
                        .setName(`${profile.nickname}.json`)

                    try {
                        await interaction.member.send({
                            content: `**–ü–†–û–§–ò–õ–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø \`${profile.nickname}\`**
:warning: **–ú–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏**
1. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª —Å –≤–∞—à–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–∏–ª—å–¥–∏–∏.
2. –í –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å.
3. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤ —Å–ª—É—á–∞–µ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–∏–ª—å–¥–∏–∏.
4. –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ñ–∞–π–ª—É JSON (–æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Ç.–¥.), –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –î–º–∏—Ç—Ä–∏—é.
5. –ï—Å–ª–∏ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥–∏–ª—å–¥–∏–∏ –∏ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω—ã –≤ —Å–ª—É—á–∞–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è.`,
                            files: [attach]
                        })
                        await interaction.reply({
                            content: `–ü—Ä–æ—Ñ–∏–ª—å \`${profile.nickname}\` –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.`,
                            ephemeral: true
                        })
                    } catch (e) {
                        return interaction.reply({
                            content: `–í–∞—à–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç—ã, –ø–æ—ç—Ç–æ–º—É –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ø—Ä–æ—Ñ–∏–ª—å \`${profile.nickname}\`.`,
                            ephemeral: true
                        })
                    }

                }
                    break;
                default:
                    break;
            }

            switch (interaction.options.getSubcommandGroup()) {
                case `set`: {
                    if (interaction.channel.type == ChannelType.DM) return interaction.reply({
                        content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!`,
                        ephemeral: true
                    })
                    const embed = new EmbedBuilder()
                        .setAuthor({
                            name: `‚ùó –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å!`
                        })
                        .setDescription(`–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —Ä–æ–ª—å \`${interaction.guild.roles.cache.get(`320880176416161802`).name}\`!
–ù–æ –≤—ã –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \`/profile update\``)
                        .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                        .setColor(`DarkRed`)
                        .setTimestamp(Date.now())

                    if (!interaction.member.roles.cache.has(`320880176416161802`)) return interaction.reply({
                        embeds: [embed]
                    })


                    switch (interaction.options.getSubcommand()) {
                        case `string`: {
                            const user_id = interaction.options.getString(`id`)
                            const user = await interaction.guild.members.fetch(user_id)
                            const userData = await User.findOne({ userid: user_id })
                            const value = interaction.options.getString(`–∑–Ω–∞—á–µ–Ω–∏–µ`)

                            switch (interaction.options.getString(`–æ–ø—Ü–∏—è`)) {
                                case `ID –≤ Discord`: {
                                    const before = userData.userid
                                    userData.userid = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }

                                    break;
                                case `UUID –≤ Minecraft`: {
                                    const before = userData.uuid
                                    userData.uuid = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }

                                    break;

                                default:
                                    break;
                            }
                        }

                            break;
                        case `number`: {
                            const user_id = interaction.options.getString(`id`)
                            const user = await interaction.guild.members.fetch(user_id)
                            const userData = await User.findOne({ userid: user_id })
                            const value = interaction.options.getNumber(`–∑–Ω–∞—á–µ–Ω–∏–µ`)

                            switch (interaction.options.getString(`–æ–ø—Ü–∏—è`)) {
                                case `–í–æ–∑—Ä–∞—Å—Ç`: {
                                    const before = userData.age

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.age = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–û–ø—ã—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                                    const before = calcActLevel(0, userData.level, userData.exp)

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    const values = getLevel(value)
                                    const level = values[0]
                                    const exp = values[1]
                                    userData.level = level
                                    userData.exp = exp
                                    userData.save()
                                    client.ActExp(userData.userid)

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                                    const before = userData.level

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.level = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–û–ø—ã—Ç —Ä–∞–Ω–≥–æ–≤`: {
                                    const before = userData.rank

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })


                                    if (value > 25000) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 25000!`,
                                        ephemeral: true
                                    })

                                    userData.rank = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–†—É–º–±–∏–∫–∏`: {
                                    const before = userData.rumbik

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.rumbik = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–û–ø—ã—Ç –≥–∏–ª—å–¥–∏–∏ (GEXP)`: {
                                    const before = userData.gexp

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.gexp = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ë–∏–ª–µ—Ç—ã`: {
                                    const before = userData.tickets

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.tickets = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;

                                case `–¶–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ`: {
                                    const before = userData.shop_costs

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.shop_costs = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–¶–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                                    const before = userData.act_costs

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.act_costs = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–¶–µ–Ω—ã –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ`: {
                                    const before = userData.king_costs

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.king_costs = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä –æ–ø—ã—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`: {
                                    const before = userData.pers_act_boost

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.pers_act_boost = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤`: {
                                    const before = userData.pers_rank_boost

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.pers_rank_boost = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤`: {
                                    const before = userData.pers_rumb_boost

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.pers_rumb_boost = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;

                                case `–û–±—ã—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`: {

                                    const before = userData.achievements.normal

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 25) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 25!`,
                                        ephemeral: true
                                    })

                                    userData.achievements.normal = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;

                                case `–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`: {
                                    const before = userData.achievements.mythical

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 5) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 5!`,
                                        ephemeral: true
                                    })

                                    userData.achievements.mythical = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;

                                case `–ú–µ–¥–∞–ª—å ü•á`: {
                                    const before = userData.medal_1

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.medal_1 = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;

                                case `–ú–µ–¥–∞–ª—å ü•à`: {
                                    const before = userData.medal_2

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.medal_2 = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ú–µ–¥–∞–ª—å ü•â`: {

                                    const before = userData.medal_3

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.medal_3 = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.common

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.common = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ –Ω–µ–æ–±—ã—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.uncommon

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.uncommon = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.rare

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.rare = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ —ç–ø–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.epic

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.epic = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.legendary

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.legendary = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ –º–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.mythical

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.mythical = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–®–∞–Ω—Å—ã –Ω–∞ —É–ª—å—Ç—Ä–∞—Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`: {

                                    const before = userData.box_chances.RNG

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.box_chances.RNG = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–¥ –∑–µ–º–ª—ë–π" (–ó–µ–º–ª—è)`: {
                                    const before = userData.elements.underground

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.underground = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π" (–ó–µ–º–ª—è)`: {
                                    const before = userData.elements.fast_grow

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.fast_grow = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–í—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–æ—Ä–Ω—ã—Ö –ø–æ—Ä–æ–¥" (–ó–µ–º–ª—è)`: {
                                    const before = userData.elements.mountains

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.mountains = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ü–ª–∞–≤–∞–Ω–∏–µ –Ω–∞ –≥–ª—É–±–∏–Ω–µ" (–í–æ–¥–∞)`: {
                                    const before = userData.elements.diving

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.diving = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ç–µ—á–µ–Ω–∏—è–º" (–í–æ–¥–∞)`: {
                                    const before = userData.elements.resistance

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.resistance = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }


                                    break;
                                case `–ù–∞–≤—ã–∫ "–ü–æ–¥–≤–æ–¥–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ" (–í–æ–¥–∞)`: {
                                    const before = userData.elements.respiration

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.respiration = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ó–∞—â–∏—Ç–∞ –æ—Ç –æ–≥–Ω—è" (–û–≥–æ–Ω—å)`: {
                                    const before = userData.elements.fire_resistance

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.fire_resistance = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–£–¥–∞—Ä –º–æ–ª–Ω–∏–∏" (–û–≥–æ–Ω—å)`: {
                                    const before = userData.elements.lightning

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.lightning = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–º–µ–Ω–µ–º" (–û–≥–æ–Ω—å)`: {
                                    const before = userData.elements.flame

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.flame = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ü–æ–ª–µ—Ç –≤ –Ω–µ–±–µ—Å–∞—Ö" (–í–æ–∑–¥—É—Ö)`: {
                                    const before = userData.elements.flying

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.flying = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–ü–æ–≤–µ–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–æ–º" (–í–æ–∑–¥—É—Ö)`: {
                                    const before = userData.elements.wind

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.wind = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ù–∞–≤—ã–∫ "–û—Ä–ª–∏–Ω—ã–π –≥–ª–∞–∑" (–í–æ–∑–¥—É—Ö)`: {
                                    const before = userData.elements.eagle_eye



                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.elements.eagle_eye = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–ü–æ–≤—ã—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ —Ä–∞–Ω–≥–æ–≤"`: {
                                    const before = userData.perks.rank_boost

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 6) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 6!`,
                                        ephemeral: true
                                    })

                                    userData.perks.rank_boost = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ"`: {
                                    const before = userData.perks.king_discount

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 4) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 4!`,
                                        ephemeral: true
                                    })

                                    userData.perks.king_discount = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"`: {
                                    const before = userData.perks.act_discount

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 3) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 3!`,
                                        ephemeral: true
                                    })

                                    userData.perks.act_discount = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–°–∫–∏–¥–∫–∞ –≤ –æ–±—ã—á–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ –≥–∏–ª—å–¥–∏–∏"`: {
                                    const before = userData.perks.shop_discount

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 4) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 4!`,
                                        ephemeral: true
                                    })

                                    userData.perks.shop_discount = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"`: {
                                    const before = userData.perks.temp_items

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.perks.temp_items = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"`: {
                                    const before = userData.perks.sell_items
                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.perks.sell_items = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –≥–∏–ª—å–¥–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞"`: {
                                    const before = userData.perks.ticket_discount

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 5) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 5!`,
                                        ephemeral: true
                                    })

                                    userData.perks.ticket_discount = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case `–ü–µ—Ä–∫ "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤"`: {
                                    const before = userData.perks.change_items

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })
                                    if (value > 1) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1!`,
                                        ephemeral: true
                                    })

                                    userData.perks.change_items = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                case '–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã': {
                                    const before = userData.visited_games

                                    if (value < 0) return interaction.reply({
                                        content: `\`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0!`,
                                        ephemeral: true
                                    })

                                    userData.visited_games = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }
                                    break;
                                default:
                                    break;
                            }

                        }

                            break;
                        case 'boolean': {
                            const user_id = interaction.options.getString(`id`)
                            const user = await interaction.guild.members.fetch(user_id)
                            const userData = await User.findOne({ userid: user_id })
                            const value = interaction.options.getBoolean(`–∑–Ω–∞—á–µ–Ω–∏–µ`)

                            switch (interaction.options.getString(`–æ–ø—Ü–∏—è`)) {
                                case `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞`: {
                                    const before = userData.displayname.custom_rank
                                    userData.displayname.custom_rank = value
                                    userData.save()

                                    const success = new EmbedBuilder()
                                        .setTitle(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ`)
                                        .setDescription(`–ó–Ω–∞—á–µ–Ω–∏–µ \`${interaction.options.getString(`–æ–ø—Ü–∏—è`)}\` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ \`${before}  ‚û°  ${value}\`! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`/profile updateall\`, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!`)
                                        .setColor(Number(linksInfo.bot_color))
                                        .setThumbnail(`https://i.imgur.com/BahQWAW.png`)
                                        .setTimestamp(Date.now())

                                    await interaction.reply({
                                        embeds: [success]
                                    })
                                }

                                    break;

                                default:
                                    break;
                            }
                        }
                            break
                        default:
                            break;
                    }
                }

                    break;

                default:

                    break;
            }
        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**–ö–æ–º–∞–Ω–¥–∞**: \`${interaction.commandName}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }

    }
};