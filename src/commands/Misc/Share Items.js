const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

const { ClientSettings } = require(`../../schemas/client`)

const { User } = require('../../schemas/userdata');

/**
 * 
 * @param {import("discord.js").ChatInputCommandInteraction} interaction Interaction
 * @param {import("../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        const { guild, user, member } = interaction
        const userData = await User.findOne({ userid: user.id, guildid: guild.id })
        const role = interaction.options.getRole(`—Ä–æ–ª—å`)
        const memberTo = interaction.options.getMember(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
        let { blacklisted } = require(`../../discord structure/blackListedRoles.json`)
        if (userData.rank_number < 10) return interaction.reply({
            content: `–í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Ä–∞–Ω–≥ "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≥–∏–ª—å–¥–∏–∏" –∏–ª–∏ –≤—ã—à–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
            ephemeral: true
        })
        if (blacklisted.includes(role.id)) return interaction.reply({
            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!`,
            ephemeral: true
        })
        if (!member.roles.cache.has(role.id)) return interaction.reply({
            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –µ—ë –Ω–µ—Ç!`,
            ephemeral: true
        })
        if (memberTo.user.bot == true) return interaction.reply({
            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –±–æ—Ç–∞–º!`,
            ephemeral: true
        })
        if (!memberTo.roles.cache.has(`504887113649750016`)) return interaction.reply({
            content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –≥–æ—Å—Ç—è–º —Å–µ—Ä–≤–µ—Ä–∞!`,
            ephemeral: true
        })
        if (memberTo.user.id == user.id) return interaction.reply({
            content: `–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–µ–¥–º–µ—Ç–æ–º —Å —Å–∞–º–∏–º —Å–æ–±–æ–π! –ù–æ –∑–∞—á–µ–º? üòÇ`,
            ephemeral: true
        })
        if (memberTo.roles.cache.has(role.id)) return interaction.reply({
            content: `–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${memberTo} —É–∂–µ –µ—Å—Ç—å —ç—Ç–∞ —Ä–æ–ª—å!`,
            ephemeral: true
        })
        await member.roles.remove(role.id)
        await memberTo.roles.add(role.id)
        const embed = new EmbedBuilder()
            .setTitle(`–£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Ä–æ–ª—å`)
            .setThumbnail(memberTo.user.displayAvatarURL())
            .setColor(Number(client.information.bot_color))
            .setTimestamp(Date.now())
            .setDescription(`–†–æ–ª—å ${role} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–∞ ${member} \`‚û°\` ${memberTo}! –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã **–ù–ï –°–ú–û–ñ–ï–¢–ï** –≤–µ—Ä–Ω—É—Ç—å —ç—Ç—É —Ä–æ–ª—å!`)
        await interaction.reply({
            embeds: [embed]
        })
        /* 
        await interaction.followUp({
            content: `${memberTo}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å \`${role.name}\` –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${member}!`
        }) */
    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        await admin.send({
            content: `-> \`\`\`${e.stack}\`\`\``
        }).catch()
    }

}
module.exports = {
    category: `share`,
    plugin: {
        id: "items",
        name: "–ü—Ä–µ–¥–º–µ—Ç—ã"
    },
    data: new SlashCommandBuilder()
        .setName(`share`)
        .setDescription(`–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–µ–¥–º–µ—Ç–æ–º —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º`)
        .addUserOption(o => o
            .setName(`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`)
            .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç`)
            .setRequired(true)
        )
        .addRoleOption(o => o
            .setName(`—Ä–æ–ª—å`)
            .setDescription(`–†–æ–ª—å, –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è`)
            .setRequired(true)
        )
        .setDMPermission(true),
    execute
};