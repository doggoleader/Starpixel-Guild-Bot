const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { joinVoiceChannel } = require('@discordjs/voice');

const wait = require('node:timers/promises').setTimeout;
const fetch = require(`node-fetch`);
const api = process.env.hypixel_apikey;
const { User } = require(`../../schemas/userdata`)
const { Guild } = require(`../../schemas/guilddata`)
const chalk = require(`chalk`);
const prettyMilliseconds = require(`pretty-ms`); //–î–û–ë–ê–í–ò–¢–¨ –í –î–†–£–ì–ò–ï
const linksInfo = require(`../../discord structure/links.json`)
const { isOneEmoji } = require(`is-emojis`);
const { rankName } = require('../../functions');

/**
 * 
 * @param {import("discord.js").ChatInputCommandInteraction} interaction Interaction
 * @param {import("../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        const { member, user, guild } = interaction

        const userData = await User.findOne({ userid: user.id, guildid: guild.id })
        switch (interaction.options.getSubcommandGroup()) {
            case `rank`: {
                if (userData.rank_number < 10) return interaction.reply({
                    content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ —Ä–∞–Ω–≥–∞!`,
                    ephemeral: true
                })
                switch (interaction.options.getSubcommand()) {
                    case `collections`: {
                        let emoji = interaction.options.getString(`–∑–Ω–∞—á–æ–∫`)
                        if (emoji == `üê∂`) {
                            let coll = [`1020400007989444678`, `1020400017330163712`, `1020400015300120638`]
                            if (!member.roles.cache.has(coll[0]) || !member.roles.cache.has(coll[1]) || !member.roles.cache.has(coll[2])) return interaction.reply({
                                content: `–í—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –°–æ–±–∞–∫–∏, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫!`,
                                ephemeral: true
                            })

                            userData.displayname.rank = emoji
                            userData.displayname.custom_rank = true
                            userData.save()

                            await interaction.reply({
                                content: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji}\`! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`,
                                ephemeral: true
                            })
                        } else if (emoji == `üê±`) {
                            let coll = [`1020400022350725122`, `1020400026045915167`, `1020400024397565962`]
                            if (!member.roles.cache.has(coll[0]) || !member.roles.cache.has(coll[1]) || !member.roles.cache.has(coll[2])) return interaction.reply({
                                content: `–í—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –ö–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫!`,
                                ephemeral: true
                            })

                            userData.displayname.rank = emoji
                            userData.displayname.custom_rank = true
                            userData.save()

                            await interaction.reply({
                                content: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji}\`! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`,
                                ephemeral: true
                            })
                        } else if (emoji == `üê∞`) {
                            let coll = [`1020400030575763587`, `1020400034853957713`, `1020400032651952168`]
                            if (!member.roles.cache.has(coll[0]) || !member.roles.cache.has(coll[1]) || !member.roles.cache.has(coll[2])) return interaction.reply({
                                content: `–í—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –ö—Ä–æ–ª–∏–∫–∞, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫!`,
                                ephemeral: true
                            })

                            userData.displayname.rank = emoji
                            userData.displayname.custom_rank = true
                            userData.save()

                            await interaction.reply({
                                content: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji}\`! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`,
                                ephemeral: true
                            })
                        } else if (emoji == `ü¶ä`) {
                            let coll = [`1020400043154485278`, `1020400047260696647`, `1020400045251633163`]
                            if (!member.roles.cache.has(coll[0]) || !member.roles.cache.has(coll[1]) || !member.roles.cache.has(coll[2])) return interaction.reply({
                                content: `–í—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –õ–∏—Å—ã, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫!`,
                                ephemeral: true
                            })

                            userData.displayname.rank = emoji
                            userData.displayname.custom_rank = true
                            userData.save()

                            await interaction.reply({
                                content: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji}\`! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`,
                                ephemeral: true
                            })
                        } else if (emoji == `ü¶Å`) {
                            let coll = [`1020400055812886529`, `1020400060636344440`, `1020400058543374388`]
                            if (!member.roles.cache.has(coll[0]) || !member.roles.cache.has(coll[1]) || !member.roles.cache.has(coll[2])) return interaction.reply({
                                content: `–í—ã –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –õ—å–≤–∞, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫!`,
                                ephemeral: true
                            })

                            userData.displayname.rank = emoji
                            userData.displayname.custom_rank = true
                            userData.save()

                            await interaction.reply({
                                content: `–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji}\`! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –æ–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`,
                                ephemeral: true
                            })
                        }
                    }
                        break;
                    case `buy`: {
                        let emoji = interaction.options.getString(`–∑–Ω–∞—á–æ–∫`)
                        if (userData.sub_type < 4) return interaction.reply({
                            content: `–í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –ø–æ–¥–ø–∏—Å–∫—É Premium, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!`,
                            ephemeral: true
                        })
                        let price = 400
                        if (userData.rumbik < price) return interaction.reply({
                            content: `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—É–º–±–∏–∫–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Å–≤–æ–π –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞!`,
                            ephemeral: true
                        })
                        if (isOneEmoji(emoji) == false) return interaction.reply({
                            content: `–î–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —ç–º–æ–¥–∂–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!`,
                            ephemeral: true
                        })
                        userData.rumbik -= price
                        userData.displayname.rank = emoji
                        userData.displayname.custom_rank = true
                        userData.save()
                        await interaction.reply({
                            content: `–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —ç–º–æ–¥–∂–∏ —Ä–∞–Ω–≥–∞ –∑–∞ ${price}<:Rumbik:883638847056003072>! –û–Ω –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!`,
                            ephemeral: true
                        })
                    }
                        break;
                    case `default`: {
                        if (userData.displayname.custom_rank == false) return interaction.reply({
                            content: `–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é! –ï—Å–ª–∏ –æ–Ω –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 15 –º–∏–Ω—É—Ç –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–æ–ø—Ä–æ—Å-–º–æ–¥–µ—Ä–∞–º!`,
                            ephemeral: true
                        })
                        userData.displayname.custom_rank = true
                        let emoji
                        if (userData.rank_number == 0) emoji = `ü¶ã`
                        else if (userData.rank_number == 1) emoji = `ü••`
                        else if (userData.rank_number == 2) emoji = `üçï`
                        else if (userData.rank_number == 3) emoji = `üçÇ`
                        else if (userData.rank_number == 4) emoji = `üçÅ`
                        else if (userData.rank_number == 5) emoji = `‚≠ê`
                        else if (userData.rank_number == 6) emoji = `üèÖ`
                        else if (userData.rank_number == 7) emoji = `üçì`
                        else if (userData.rank_number == 8) emoji = `üß®`
                        else if (userData.rank_number == 9) emoji = `üíé`
                        else if (userData.rank_number == 10) emoji = `üçá`

                        userData.displayname.rank = emoji
                        userData.save()

                        await interaction.reply({
                            content: `–í—ã –≤–µ—Ä–Ω—É–ª–∏ —Å–≤–æ–π –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é! –í —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –≤–∞–º –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ \`${emoji} ${rankName(userData.rank_number)}`
                        })
                    }
                        break;

                    default:
                        break;
                }
            }

                break;
            default:
                break;
        }
    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        let options = interaction?.options.data.map(a => {
            return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
        })
        await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
        await admin.send(`=> ${e}.
**–ö–æ–º–∞–Ω–¥–∞**: \`${interaction.commandName}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
        await admin.send(`‚óæ`)
    }


}
module.exports = {
    category: `nick`,
    plugin: {
        id: "nicknames",
        name: "–ù–∏–∫–Ω–µ–π–º—ã"
    },
    data: new SlashCommandBuilder()
        .setName(`nickname`)
        .setDescription(`–ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –Ω–∏–∫–Ω–µ–π–º`)
        .setDMPermission(false)
        .addSubcommandGroup(gr => gr
            .setName(`rank`)
            .setDescription(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞`)
            .addSubcommand(sb => sb
                .setName(`collections`)
                .setDescription(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ –∑–∞ —Å–æ–±—Ä–∞–Ω–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é`)
                .addStringOption(option => option
                    .setName(`–∑–Ω–∞—á–æ–∫`)
                    .setDescription(`–ó–Ω–∞—á–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏`)
                    .setRequired(true)
                    .setChoices(
                        {
                            name: `üê∂`,
                            value: `üê∂`
                        },
                        {
                            name: `üê±`,
                            value: `üê±`
                        },
                        {
                            name: `üê∞`,
                            value: `üê∞`
                        },
                        {
                            name: `ü¶ä`,
                            value: `ü¶ä`
                        },
                        {
                            name: `ü¶Å`,
                            value: `ü¶Å`
                        }
                    )
                )
            )
            .addSubcommand(sb => sb
                .setName(`buy`)
                .setDescription(`–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–Ω–∞—á–æ–∫ –¥–ª—è —Ä–∞–Ω–≥–∞`)
                .addStringOption(option => option
                    .setName(`–∑–Ω–∞—á–æ–∫`)
                    .setDescription(`–ó–Ω–∞—á–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å`)
                    .setRequired(true)
                )
            )
            .addSubcommand(sb => sb
                .setName(`default`)
                .setDescription(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ —Ä–∞–Ω–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∑–Ω–∞—á–æ–∫ –≤–∞—à–µ–≥–æ —Ä–∞–Ω–≥–∞)`)
            )

        ),
    execute
};