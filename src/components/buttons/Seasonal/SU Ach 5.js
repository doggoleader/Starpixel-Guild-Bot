const { Birthday } = require(`../../../schemas/birthday`)
const { Temp } = require(`../../../schemas/temp_items`)
const { User } = require(`../../../schemas/userdata`)
const { Guild } = require(`../../../schemas/guilddata`)
const chalk = require(`chalk`)
const fetch = require(`node-fetch`)
const cron = require(`node-cron`)
const prettyMilliseconds = require(`pretty-ms`)
const ch_list = require(`../../../discord structure/channels.json`)
const { EmbedBuilder, SlashCommandBuilder } = require("discord.js")
const { execute } = require('../../../events/client/start_bot/ready');
const { achievementStats, found, getProperty } = require(`../../../functions`)
const linksInfo = require(`../../../discord structure/links.json`)
const api = process.env.hypixel_apikey
module.exports = {
    plugin: {
        id: "seasonal",
        name: "–°–µ–∑–æ–Ω–Ω–æ–µ"
    },
    data: {
        name: `season_summer_ach5`
    },
    async execute(interaction, client) {
        try {
            const guildData = await Guild.findOne({ id: interaction.guild.id })
            if (guildData.plugins.seasonal === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
            if (guildData.seasonal.summer.enabled === false) return interaction.reply({
                content: `–°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –¥–ª—è –õ–µ—Ç–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥ **1 –∏—é–Ω—è –ø–æ 31 –∞–≤–≥—É—Å—Ç–∞**!`,
                ephemeral: true
            })
            const userData = await User.findOne({ userid: interaction.user.id })
            if (!userData.onlinemode) return interaction.reply({
                content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –Ω–µ–ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç!`,
                ephemeral: true
            })
            const { member, guild, user, channel } = interaction
            const already_done = new EmbedBuilder()
                .setColor(`DarkRed`)
                .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                .setAuthor({
                    name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
                })
                .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


            if (userData.seasonal.summer.achievements.num5 === true) return interaction.reply({
                embeds: [already_done],
                ephemeral: true
            })

            const no_condition = new EmbedBuilder()
                .setColor(`DarkRed`)
                .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
                .setAuthor({
                    name: `‚ùó –í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!`
                })
                .setDescription(`–í—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.su_achs}>.
**–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ–±—ã –≤—ã —Å–æ—Å—Ç–æ—è–ª–∏ –≤ –≥–∏–ª—å–¥–∏–∏ Starpixel!**
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)
                .setTimestamp(Date.now())
            const response = await fetch(`https://api.hypixel.net/guild?id=5c1902fc77ce84cd430f3959`, {
                headers: {
                    "API-Key": api,
                    "Content-Type": "application/json"
                }
            })
            let json
            if (response.ok) json = await response.json()
            let gexp_nums
            let sum
            let map
            let player = await json.guild.members.find(member => member.uuid == userData.uuid)
            if (!player) {
                map = `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–∏–ª—å–¥–∏–∏!`
                sum = 0
            } else {
                gexp_nums = Object.entries(player.expHistory)
                sum = 0
                map = gexp_nums.map(([key, value]) => {
                    sum += value
                    let sp = key.split(`-`)
                    let date = `${sp[2]}.${sp[1]}.${sp[0]}`
                    return `‚Ä¢ \`${date}\` - ${value} GEXP`
                }).join(`\n`)
            }
            if (sum < 150000 || !player) return interaction.reply({
                embeds: [no_condition],
                ephemeral: true
            })
            let reward = `1104095303054934168`
            let name = `–ñ–∞–∂–¥–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`
            if (member.roles.cache.has(reward)) {
                if (userData.stacked_items.length < userData.upgrades.inventory_size) {
                    await userData.stacked_items.push(reward)
                    await interaction.reply({
                        content: `–ù–∞–≥—Ä–∞–¥–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É, –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–æ—Ä–æ–±–∫–∏ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É </rewards claim:1055546254240784492>! –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –Ω–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ –ø—Ä–æ–ø–∏—à–∏—Ç–µ </rewards unclaimed:1055546254240784492>!`,
                        ephemeral: true
                    })
                } else return interaction.reply({
                    content: `–ú—ã –Ω–µ –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω. –ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –≤–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª <#1141026403765211136>!`,
                    ephemeral: true
                })
            } else {
                await member.roles.add(reward)
                await interaction.deferUpdate()
            }
            userData.seasonal.summer.achievements.num5 = true

            userData.rank += 50
            userData.exp += 300;
            userData.seasonal.summer.points += 5
            userData.save()
            client.ActExp(userData.userid)
            const condition_meet = new EmbedBuilder()
                .setColor(Number(linksInfo.bot_color))
                .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                .setTimestamp(Date.now())
                .setDescription(`${member} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${name}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#${ch_list.su_achs}>

–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ <#${ch_list.su_main}>!`)


            await interaction.guild.channels.cache.get(ch_list.act).send(
                `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +300 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

            await interaction.guild.channels.cache.get(ch_list.rank).send(
                `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${member} +50 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
            await interaction.guild.channels.cache.get(ch_list.main).send({
                embeds: [condition_meet]
            })
            console.log(chalk.blackBright(`[${new Date()}]`) + chalk.magenta(`[–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ]` + chalk.gray(`: ${member.user.username} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${name}!`)))

        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**ID –∫–Ω–æ–ø–∫–∏**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }


    }
}
