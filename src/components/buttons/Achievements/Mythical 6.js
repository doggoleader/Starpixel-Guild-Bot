const { SlashCommandBuilder, ModalBuilder, TextInputBuilder, ActionRowBuilder, TextInputStyle, InteractionType, ButtonBuilder, ButtonStyle, ComponentType, channelLink, ChannelType, EmbedBuilder, } = require('discord.js');
const { Apply } = require(`../../../schemas/applications`)
const linksInfo = require(`../../../discord structure/links.json`)
const ch_list = require(`../../../discord structure/channels.json`);
const { User } = require('../../../schemas/userdata');
const { Guild } = require('../../../schemas/guilddata');
const roles_info = require(`../../../discord structure/roles.json`)
const wait = require(`node:timers/promises`).setTimeout

/**
 * 
 * @param {import("discord.js").ButtonInteraction} interaction Interaction
 * @param {import("../../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        const { guild, member, user } = interaction
        const guildData = await Guild.findOne({ id: guild.id })
        const userData = await User.findOne({ userid: user.id })

        let role = `1068215995090608169`
        let name = `‚Ññ6. –ú–∏—Ä–æ–≤–∞—è —Ç–∞–π–Ω–∞`

        const already_done = new EmbedBuilder()
            .setColor(`DarkRed`)
            .setThumbnail(`https://i.imgur.com/6IE3lz7.png`)
            .setAuthor({
                name: `‚ùó –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`
            })
            .setDescription(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ! –ù–∞–π—Ç–∏ –µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.
    
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ <#${ch_list.ask}>!`)


        if (member.roles.cache.has(role)) return interaction.reply({
            embeds: [already_done],
            ephemeral: true
        })
        if (userData.achievements.myth_6_clicked < 50) {
            let not_enough = [
                "–¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!",
                "–û –Ω–µ—Ç, –æ –Ω–µ—Ç, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–¥–∞–Ω–æ!",
                "–ê–π, –±–ª–∏–Ω, –º–Ω–µ –∂–µ –±–æ–ª—å–Ω–æ!",
                "–•–≤–∞—Ç–∏—Ç —á—É–ø–∞—Ç—å –º–µ–Ω—è, –∞? –Ø –ø–æ–∑–æ–≤—É —Å–≤–æ–µ–≥–æ –∞–¥–≤–æ–∫–∞—Ç–∞!",
                "–ù–µ—Ç, –Ω—É –ø—Ä–∞–≤–¥–∞, —Ö–≤–∞—Ç–∏—Ç —É–∂–µ!",
                "–Ø —É—Å—Ç–∞–ª–∞!",
                "–¢—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ª—É—á–∏—à—å —ç—Ç–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!",
                "–•–∞, –º–∏–º–æ, –≤–µ–¥—å —Ç–∞–∫?",
                "–§—É! –°–ª–∞–±–∞–∫!",
                "–ù—É... –ø–æ–∂–∞–ª—É–π—Å—Ç–∞... –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å...",
                "–û –Ω–µ—Ç!",
                "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –µ–≥–æ!",
                "–ù–∏–∫–æ–≥–¥–∞ –±–æ–ª—å—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞–π!",
                "–≠—Ö... –ù—É –ª–∞–¥–Ω–æ, –ø—Ä–∏–¥–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ–±–µ —Ç–∞–π–Ω—É, –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –º–µ–Ω—è... –Ω–∞–±–µ–π 1.000.000.000 GEXP –∑–∞ –º–µ—Å—è—Ü",
                "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å?",
                "–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? –ù–µ —É—Å—Ç–∞–ª?",
            ]
            let res = not_enough[Math.floor(Math.random() * not_enough.length)]
            await interaction.reply({
                content: `${res}`,
                ephemeral: true
            })
            userData.achievements.myth_6_clicked += 1
            userData.achievements.myth_6_remove = Date.now() + (1000 * 20)
            userData.save()

            await wait(20000)
            Functins.AchMyth6()
        } else {
            let reward = `781069821953441832`
            if (member.roles.cache.has(reward)) {
                if (userData.stacked_items.length < userData.upgrades.inventory_size) {
                    await userData.stacked_items.push(reward)
                    await interaction.reply({
                        content: `–ù–∞–≥—Ä–∞–¥–∞ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É, –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–æ—Ä–æ–±–∫–∏ –∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É </rewards claim:1055546254240784492>! –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –Ω–µ–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ –ø—Ä–æ–ø–∏—à–∏—Ç–µ </rewards unclaimed:1055546254240784492>!`,
                        ephemeral: true
                    })
                } else return interaction.reply({
                    content: `–ú—ã –Ω–µ –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω. –ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –≤–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª <#1141026403765211136>!`,
                    ephemeral: true
                })
            } else {
                await member.roles.add(reward)
                await interaction.deferUpdate()
            }
            await member.roles.add(role)


            userData.rank += 500 * userData.pers_rank_boost + Math.round(500 * userData.perks.rank_boost * 0.05)
            userData.exp += 1000;
            await client.CountAchievements()
            userData.save()
            const condition_meet = new EmbedBuilder()
                .setColor(Number(linksInfo.bot_color))
                .setThumbnail(`https://i.imgur.com/Xa6HxCU.png`)
                .setTitle(`‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`)
                .setTimestamp(Date.now())
                .setDescription(`${user} –≤—ã–ø–æ–ª–Ω–∏–ª –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ \`${name}\`!
–û–Ω —É–∂–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–∑. –•–æ—á–µ—à—å –∏ —Ç—ã? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –≤ <#${ch_list.achs}>!
    
–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: \`${userData.achievements.normal}/${roles_info.achievements_normal.length}\`
–ú–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: \`${userData.achievements.mythical + 1}/${roles_info.achievements_myth.length}\``)


            await interaction.guild.channels.cache.get(ch_list.act).send(
                `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${user} +1000 üåÄ
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)

            await interaction.guild.channels.cache.get(ch_list.rank).send(
                `‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï
${user} +500 üí†
\`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.\`
‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ`)
            await interaction.guild.channels.cache.get(ch_list.main).send({
                embeds: [condition_meet]
            })
        }

    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        let options = interaction?.options.data.map(a => {
            return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
        })
        await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
        await admin.send(`=> ${e}.
**ID –º–æ–¥–µ–ª–∏**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
        await admin.send(`‚óæ`)
    }

}
module.exports = {
    plugin: {
        id: "items",
        name: "–ü—Ä–µ–¥–º–µ—Ç—ã"
    },
    data: {
        name: "ach_myth_6"
    },
    execute
}