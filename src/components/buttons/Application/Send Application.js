const { SlashCommandBuilder, ModalBuilder, TextInputBuilder, ActionRowBuilder, TextInputStyle, InteractionType, ButtonBuilder, ButtonStyle, ComponentType, EmbedBuilder } = require('discord.js');

const { Apply } = require(`../../../schemas/applications`)
const ch_list = require(`../../../discord structure/channels.json`)
/**
 * 
 * @param {import("discord.js").ButtonInteraction} interaction Interaction
 * @param {import("../../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        await interaction.deferReply({ ephemeral: true, fetchReply: true })
        let appData = await Apply.findOne({ userid: interaction.user.id, guildid: interaction.guild.id }) || new Apply({ userid: interaction.user.id, guildid: interaction.guild.id })


        if (appData.rules_accepted == false) return interaction.editReply({
            content: `–í—ã –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≤ <#${ch_list.rules}>`,
            ephemeral: true
        })
        if (!appData.part1 || !appData.part2) return interaction.editReply({
            content: `–í—ã –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é!`,
            ephemeral: true
        })
        if (appData.applied == true) return interaction.editReply({
            content: `–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é!`,
            ephemeral: true
        })


        await interaction.editReply({
            content: `**–í—ã –ø–æ–¥–∞–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É!**
                
–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–∏–ª—å–¥–∏—é:
1. –ò–º—è - \`${appData.que1}\`.
2. –ù–∏–∫–Ω–µ–π–º - \`${appData.que2 ? appData.que2 : "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞"}\`.
3. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ - \`${appData.que5}\`.
4. –°–ª—ã—à–∞–ª–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≥–∏–ª—å–¥–∏–µ–π —Å–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞?
\`${appData.que6}\`.
5. –ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏?
\`${appData.que7 ? appData.que7 : "–û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω"}\`.`,
            ephemeral: true
        })
        const ch = await interaction.guild.channels.fetch(ch_list.apply)

        const embed = new EmbedBuilder()
            .setTitle(`–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${interaction.user.username}`)
            .setColor(Number(client.information.bot_color))
            .setDescription(`**–ó–ê–Ø–í–ö–ê**
1. –ò–º—è - \`${appData.que1}\`.
2. –ù–∏–∫–Ω–µ–π–º - \`${appData.que2 ? appData.que2 : "–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞"}\`.
3. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ - \`${appData.que5}\`.
4. –°–ª—ã—à–∞–ª–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≥–∏–ª—å–¥–∏–µ–π —Å–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞?
\`${appData.que6}\`.
5. –ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏?
\`${appData.que7 ? appData.que7 : "–û—Ç–≤–µ—Ç –Ω–µ –¥–∞–Ω"}\`.`)
            .setFooter({ text: `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏ –ª—é–±–æ–º —Ä–µ—à–µ–Ω–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.` })


        const buttons = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`app_decline`)
                    .setEmoji(`‚ùå`)
                    .setLabel(`–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É`)
                    .setStyle(ButtonStyle.Danger)
            )
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`app_waiting`)
                    .setEmoji(`üïë`)
                    .setLabel(`–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ`)
                    .setStyle(ButtonStyle.Secondary)
            )
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`app_accept`)
                    .setEmoji(`‚úÖ`)
                    .setLabel(`–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É`)
                    .setStyle(ButtonStyle.Success)
            )
        const msg = await ch.send({
            content: `${interaction.member}`,
            embeds: [embed],
            components: [buttons]
        })
        appData.applicationid = msg.id
        appData.status = `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏`
        appData.applied = true
        appData.save()
    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        await admin.send({
            content: `-> \`\`\`${e.stack}\`\`\``
        }).catch()
    }

}
module.exports = {
    plugin: {
        id: "new_users",
        name: "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
    },
    data: {
        name: "app_send"
    },
    execute
}