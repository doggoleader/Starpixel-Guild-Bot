const { SlashCommandBuilder, ModalBuilder, TextInputBuilder, ActionRowBuilder, TextInputStyle, InteractionType, ButtonBuilder, ButtonStyle, ComponentType, StringSelectMenuBuilder, EmbedBuilder, UserSelectMenuBuilder } = require('discord.js');
const { Apply } = require(`../../../schemas/applications`)
const linksInfo = require(`../../../discord structure/links.json`);
const ch_list = require(`../../../discord structure/channels.json`);
const { User } = require('../../../schemas/userdata');
const api = process.env.hypixel_apikey
const { tasks } = require(`../../../miscellaneous/New Start.json`);
const fetch = require(`node-fetch`);
const { getProperty, daysOfWeek } = require('../../../functions');
const { Guild } = require('../../../schemas/guilddata');
module.exports = {
    plugin: {
        id: "guildgames",
        name: "–°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã"
    },
    data: {
        name: "gg_set_days"
    },
    async execute(interaction, client) {
        try {
            let days = interaction.values
            const guildData = await Guild.findOne({ id: interaction.guild.id })
            const { guild, member, user } = interaction
            guildData.guildgames.game_days = []
            guildData.guildgames.officers = []
            await interaction.reply({
                content: `–ò–¥—ë—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏... –°–µ–π—á–∞—Å –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –≤–µ–¥—É—â–µ–≥–æ –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥–Ω–µ–π!`,
                ephemeral: true
            })
            for (const day of days) {
                guildData.guildgames.game_days.push(day)
                const userSelect = new ActionRowBuilder()
                    .addComponents(
                        new UserSelectMenuBuilder()
                            .setCustomId(`gg_setoffs`)
                            .setPlaceholder(`–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ–¥—É—â–µ–≥–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã`)
                    )
                const typeSel = new ActionRowBuilder()
                    .addComponents(
                        new StringSelectMenuBuilder()
                            .setCustomId(`gg_set_type`)
                            .setPlaceholder(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏–ø —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã`)
                            .setMaxValues(1)
                            .setOptions([
                                {
                                    label: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è",
                                    value: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è"
                                },
                                {
                                    label: "–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã",
                                    value: "–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã"
                                },
                                {
                                    label: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤",
                                    value: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤"
                                },
                                {
                                    label: "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞",
                                    value: "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞"
                                },
                                {
                                    label: "–ß–∞—Ç-–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤",
                                    value: "–ß–∞—Ç-–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤"
                                },
                                {
                                    label: "–ü—Ä–æ—á–µ–µ —Å–æ–±—ã—Ç–∏–µ",
                                    value: "–ü—Ä–æ—á–µ–µ —Å–æ–±—ã—Ç–∏–µ"
                                }
                            ])
                    )
                const saveButt = new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                            .setCustomId(`gg_save_button`)
                            .setEmoji('üëå')
                            .setLabel("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                            .setStyle(ButtonStyle.Success)
                    )
                const msg = await interaction.followUp({
                    content: `–í—ã–±–æ—Ä –≤–µ–¥—É—â–µ–≥–æ –Ω–∞ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: **${daysOfWeek(Number(day))}**
–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏–ø —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω __—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π__ —Ç–∏–ø —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã!`,
                    components: [userSelect, typeSel, saveButt],
                    fetchReply: true,
                    ephemeral: true
                })

                const collector = msg.createMessageComponentCollector()
                collector.on('collect', async (i) => {
                    if (i.customId == 'gg_setoffs') {
                        const id = i.values[0]
                        const memberTo = await i.guild.members.fetch(id)
                        if (!memberTo.roles.cache.has(`563793535250464809`) && !memberTo.roles.cache.has(`523559726219526184`)) return i.reply({
                            content: `–£ ${memberTo} –Ω–µ—Ç —Ä–æ–ª–∏ <@&563793535250464809> –∏ <@&523559726219526184>! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`,
                            ephemeral: true
                        })
                        let menu = await guildData.guildgames.officers.find(o => o.day == day)
                        if (menu) {
                            menu.id = id;
                            menu.day = day;
                        } else {
                            guildData.guildgames.officers.push({
                                id: id,
                                day: day
                            })
                        }

                        guildData.save()
                        await i.deferUpdate()
                        try {
                            await memberTo.send({
                                content: `–í—ã –≤–µ–¥—ë—Ç–µ —Å–æ–≤–º–µ—Å—Ç–Ω—É—é –∏–≥—Ä—É –≤ **${daysOfWeek(Number(day))}**! –ï—Å–ª–∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –µ—ë, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —á–∞—Ç–µ –∏–ª–∏ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!`
                            })
                        } catch (e) {

                        }
                    } else if (i.customId == 'gg_set_type') {
                        const type = i.values[0]
                        await i.deferReply({ ephemeral: true, fetchReply: true })
                        let menu = await guildData.guildgames.officers.find(o => o.day == day)
                        if (menu) {
                            menu.type = type;
                            menu.day = day;
                        } else {
                            guildData.guildgames.officers.push({
                                type: type,
                                day: day
                            })
                        }
                        guildData.save()
                        await i.editReply({
                            content: `–¢–∏–ø –∏–≥—Ä—ã \`${type}\` –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`
                        })
                    } else if (i.customId == 'gg_save_button') {
                        await i.reply({
                            content: `–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`,
                            ephemeral: true
                        })
                        await collector.stop()
                    }
                })

                collector.on('end', async (e) => {
                    guildData.save()
                })
            }
            guildData.save()
        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**ID –º–µ–Ω—é**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }


    }
}