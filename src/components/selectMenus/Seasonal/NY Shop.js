const { Birthday } = require(`../../../schemas/birthday`)
const { Temp } = require(`../../../schemas/temp_items`)
const { User } = require(`../../../schemas/userdata`)
const { Guild } = require(`../../../schemas/guilddata`)
const chalk = require(`chalk`)
const fetch = require(`node-fetch`)
const cron = require(`node-cron`)
const prettyMilliseconds = require(`pretty-ms`)
const ch_list = require(`../../../discord structure/channels.json`)
const { EmbedBuilder, SlashCommandBuilder } = require("discord.js")
const { execute } = require('../../../events/client/start_bot/ready');
const { achievementStats, found, getProperty } = require(`../../../functions`)
const linksInfo = require(`../../../discord structure/links.json`)
const api = process.env.hypixel_apikey
module.exports = {
    plugin: {
        id: "seasonal",
        name: "–°–µ–∑–æ–Ω–Ω–æ–µ"
    },
    data: {
        name: `season_newyear_shop`
    },
    async execute(interaction, client) {
        try {
            const guildData = await Guild.findOne({ id: interaction.guild.id })
            if (guildData.plugins.seasonal === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
            if (guildData.seasonal.new_year.enabled === false) return interaction.reply({
                content: `–°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –¥–ª—è –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥ **1 –¥–µ–∫–∞–±—Ä—è –ø–æ 18 —è–Ω–≤–∞—Ä—è**!`,
                ephemeral: true
            })
            const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
            const symb = interaction.values[0]
            let price
            if (symb == `üéÑ` || symb == `‚ú®` || symb == `üéÜ`) {
                price = 30
            } else if (symb == `üéÅ`) {
                price = 40
            } else if (symb == `üéá` || symb == `üéà`) {
                price = 50
            }

            if (userData.seasonal.new_year.points < price) return interaction.reply({
                content: `–î–ª—è –ø–æ–∫—É–ø–∫–∏ \`${symb}\` –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º ${price} –æ—á–∫–æ–≤! –£ –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ${userData.seasonal.new_year.points} –æ—á–∫–æ–≤.`,
                ephemeral: true
            })
            userData.seasonal.new_year.points -= price
            userData.displayname.symbol = symb
            userData.save()
            await interaction.reply({
                content: `–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ \`${symb}\` –∑–∞ ${price} –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –æ—á–∫–æ–≤! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–∞–Ω–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –Ω–∏–∫–Ω–µ–π–º–µ! –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–æ–ø—Ä–æ—Å-–º–æ–¥–µ—Ä–∞–º!`,
                ephemeral: true
            })

        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**ID –∫–Ω–æ–ø–∫–∏**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }


    }
}
