const { Temp } = require(`../../../schemas/temp_items`)
const { User } = require(`../../../schemas/userdata`)
const { Guild } = require(`../../../schemas/guilddata`)
const chalk = require(`chalk`)
const fetch = require(`node-fetch`)
const cron = require(`node-cron`)
const prettyMilliseconds = require(`pretty-ms`)
const ch_list = require(`../../../discord structure/channels.json`)
const { EmbedBuilder, SlashCommandBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require("discord.js")

const { achievementStats, found, getProperty } = require(`../../../functions`)
const linksInfo = require(`../../../discord structure/links.json`)
const { lb_newyear, gift_newyear, stats_newyear, quests_newyear } = require("../../../misc_functions/Exporter")
const api = process.env.hypixel_apikey
/**
 * 
 * @param {import("discord.js").UserSelectMenuInteraction} interaction Interaction
 * @param {import("../../../misc_functions/Exporter").StarpixelClient} client Client
 * 
 * Interaction main function
 */
async function execute(interaction, client) {
    try {
        const msg = await interaction.deferReply({ fetchReply: true, ephemeral: true })
        await interaction.message.edit({
            components: [lb_newyear, stats_newyear, gift_newyear, quests_newyear]
        })
        const guildData = await Guild.findOne({ id: interaction.guild.id })
        if (guildData.plugins.seasonal === false) return interaction.editReply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
        if (guildData.seasonal.new_year.enabled === false) return interaction.editReply({
            content: `–°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –¥–ª—è –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥ **1 –¥–µ–∫–∞–±—Ä—è –ø–æ 18 —è–Ω–≤–∞—Ä—è**!`,
            ephemeral: true
        })

        const member = await interaction.guild.members.fetch(interaction.values[0])
        const { user } = member
        if (user.bot) return interaction.editReply({
            content: `${user} —è–≤–ª—è–µ—Ç—Å—è –±–æ—Ç–æ–º, –∞ –∑–Ω–∞—á–∏—Ç –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –æ—á–∫–∏ :'(`,
            ephemeral: true
        })
        if (!member.roles.cache.has(`504887113649750016`)) return interaction.editReply({
            content: `${member} —è–≤–ª—è–µ—Ç—Å—è –≥–æ—Å—Ç–µ–º –≥–∏–ª—å–¥–∏–∏, –∞ –∑–Ω–∞—á–∏—Ç —É –Ω–µ–≥–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –æ—á–∫–æ–≤!`,
            ephemeral: true
        })
        const users = await User.find().then(users => {
            return users.filter(async user => await interaction.guild.members.fetch(user.userid))
        })
        const sorts = users.sort((a, b) => {
            return b.seasonal.new_year.points - a.seasonal.new_year.points
        })
        var i = 0
        while (sorts[i].userid !== user.id) {
            i++
        }
        const userData = await User.findOne({ userid: user.id, guildid: interaction.guild.id })
        let rank = i + 1

        let button = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`exchange_snowflakes`)
                    .setLabel(`–û–±–º–µ–Ω—è—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏ –Ω–∞ —Ä—É–º–±–∏–∫–∏`)
                    .setEmoji(`üí±`)
                    .setStyle(ButtonStyle.Primary)
                    .setDisabled(interaction.user.id == userData.userid ? false : true)
            )
        const embed = new EmbedBuilder()
            .setTitle(`–ù–æ–≤–æ–≥–æ–¥–Ω—è—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.username}`)
            .setDescription(`**–ü–æ–∑–∏—Ü–∏—è –≤ —Ç–æ–ø–µ**: ${rank}
**–û—á–∫–æ–≤**: ${userData.seasonal.new_year.points}
**–°–Ω–µ–∂–∏–Ω–æ–∫**: ${userData.seasonal.new_year.snowflakes}:snowflake:
**–û—Ç–∫—Ä—ã—Ç–æ –ø–æ–¥–∞—Ä–∫–æ–≤**: ${userData.seasonal.new_year.opened_gifts}
**–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–≤–µ—Å—Ç–æ–≤**: ${userData.seasonal.new_year.quests_completed}
**–ü–æ–¥–∞—Ä–µ–Ω–æ –Ω–∞–±–æ—Ä–æ–≤**: ${userData.seasonal.new_year.gifted_packs}
**–°–æ–±—Ä–∞–Ω–æ –∫–æ—Å—Ç—é–º–æ–≤**: ${userData.seasonal.new_year.suits_returned}

**–ö–û–°–¢–Æ–ú –î–ï–î–ê –ú–û–†–û–ó–ê**
**–®–∞–ø–∫–∞**: \`${userData.seasonal.new_year.santa_suit.hat ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–®—É–±–∞**: \`${userData.seasonal.new_year.santa_suit.chest ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–í–∞—Ä–µ–∂–∫–∏**: \`${userData.seasonal.new_year.santa_suit.gloves ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–ú–µ—à–æ–∫**: \`${userData.seasonal.new_year.santa_suit.bag ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`

**–î–û–°–¢–ò–ñ–ï–ù–ò–Ø**
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ1**: ${achievementStats(userData.seasonal.new_year.achievements.num1)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ2**: ${achievementStats(userData.seasonal.new_year.achievements.num2)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ3**: ${achievementStats(userData.seasonal.new_year.achievements.num3)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ4**: ${achievementStats(userData.seasonal.new_year.achievements.num4)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ5**: ${achievementStats(userData.seasonal.new_year.achievements.num5)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ6**: ${achievementStats(userData.seasonal.new_year.achievements.num6)}

**–¢–ï–ö–£–©–ò–ô –ö–í–ï–°–¢**
**–£—Å–ª–æ–≤–∏–µ**: \`${userData.seasonal.new_year.quest.description} \`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.new_year.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –∫–æ–Ω–µ—Ü –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.new_year.quest.requirement}
**–°—Ç–∞—Ç—É—Å**: \`${userData.seasonal.new_year.quest.finished ? `–ó–∞–≤–µ—Ä—à–µ–Ω–æ ‚úÖ` : `–ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚ùå`}\``)
            .setThumbnail(user.displayAvatarURL())
            .setColor(Number(linksInfo.bot_color))
            .setTimestamp(Date.now())

        await interaction.editReply({
            embeds: [embed],
            components: [button],
            ephemeral: true,
            fetchReply: true
        })

        const collector = await msg.createMessageComponentCollector()

        collector.on('collect', async i => {
            if (userData.seasonal.new_year.snowflakes < 50) return i.reply({
                content: `–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –≤–∞—à–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –æ–±–º–µ–Ω–∞ (50 :snowflake: -> 100 <:Rumbik:883638847056003072>)!`,
                ephemeral: true
            })


            userData.seasonal.new_year.snowflakes -= 50;
            userData.rumbik += 100;
            userData.progress.items.find(it => it.name == 'RUMBIKS_TOTAL').total_items += 100
            userData.save()

            button = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId(`exchange_snowflakes`)
                        .setLabel(`–û–±–º–µ–Ω—è—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏ –Ω–∞ —Ä—É–º–±–∏–∫–∏`)
                        .setEmoji(`üí±`)
                        .setStyle(ButtonStyle.Primary)
                        .setDisabled(interaction.user.id == userData.userid ? false : true)
                )
            await i.reply({
                content: `–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ 50 :snowflake: –Ω–∞ 100 <:Rumbik:883638847056003072>! –£ –≤–∞—Å —Å–µ–π—á–∞—Å ${userData.seasonal.new_year.snowflakes}:snowflake: –∏ ${userData.rumbik}<:Rumbik:883638847056003072>!`,
                ephemeral: true
            })
            embed.setDescription(`**–ü–æ–∑–∏—Ü–∏—è –≤ —Ç–æ–ø–µ**: ${rank}
**–û—á–∫–æ–≤**: ${userData.seasonal.new_year.points}
**–°–Ω–µ–∂–∏–Ω–æ–∫**: ${userData.seasonal.new_year.snowflakes}:snowflake:
**–û—Ç–∫—Ä—ã—Ç–æ –ø–æ–¥–∞—Ä–∫–æ–≤**: ${userData.seasonal.new_year.opened_gifts}
**–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–≤–µ—Å—Ç–æ–≤**: ${userData.seasonal.new_year.quests_completed}
**–ü–æ–¥–∞—Ä–µ–Ω–æ –Ω–∞–±–æ—Ä–æ–≤**: ${userData.seasonal.new_year.gifted_packs}
**–°–æ–±—Ä–∞–Ω–æ –∫–æ—Å—Ç—é–º–æ–≤**: ${userData.seasonal.new_year.suits_returned}

**–ö–û–°–¢–Æ–ú –î–ï–î–ê –ú–û–†–û–ó–ê**
**–®–∞–ø–∫–∞**: \`${userData.seasonal.new_year.santa_suit.hat ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–®—É–±–∞**: \`${userData.seasonal.new_year.santa_suit.chest ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–í–∞—Ä–µ–∂–∫–∏**: \`${userData.seasonal.new_year.santa_suit.gloves ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`
**–ú–µ—à–æ–∫**: \`${userData.seasonal.new_year.santa_suit.bag ? `–ù–∞–π–¥–µ–Ω–æ ‚úÖ` : `–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå`}\`

**–î–û–°–¢–ò–ñ–ï–ù–ò–Ø**
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ1**: ${achievementStats(userData.seasonal.new_year.achievements.num1)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ2**: ${achievementStats(userData.seasonal.new_year.achievements.num2)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ3**: ${achievementStats(userData.seasonal.new_year.achievements.num3)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ4**: ${achievementStats(userData.seasonal.new_year.achievements.num4)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ5**: ${achievementStats(userData.seasonal.new_year.achievements.num5)}
**–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚Ññ6**: ${achievementStats(userData.seasonal.new_year.achievements.num6)}

**–¢–ï–ö–£–©–ò–ô –ö–í–ï–°–¢**
**–£—Å–ª–æ–≤–∏–µ**: \`${userData.seasonal.new_year.quest.description} \`
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.new_year.quest.before}
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –∫–æ–Ω–µ—Ü –∫–≤–µ—Å—Ç–∞**: ${userData.seasonal.new_year.quest.requirement}
**–°—Ç–∞—Ç—É—Å**: \`${userData.seasonal.new_year.quest.finished ? `–ó–∞–≤–µ—Ä—à–µ–Ω–æ ‚úÖ` : `–ù–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚ùå`}\``)
            await interaction.editReply({
                embeds: [embed],
                components: [button],
                fetchReply: true
            })
        })

    } catch (e) {
        const admin = await client.users.fetch(`491343958660874242`)
        console.log(e)
        let options = interaction?.options.data.map(a => {
            return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
        })
        await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
        await admin.send(`=> ${e}.
**ID –∫–Ω–æ–ø–∫–∏**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
        await admin.send(`‚óæ`)
    }


}
module.exports = {
    plugin: {
        id: "seasonal",
        name: "–°–µ–∑–æ–Ω–Ω–æ–µ"
    },
    data: {
        name: `season_newyear_stats`
    },
    execute
}
