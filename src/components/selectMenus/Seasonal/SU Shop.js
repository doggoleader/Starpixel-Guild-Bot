const { Birthday } = require(`../../../schemas/birthday`)
const { Temp } = require(`../../../schemas/temp_items`)
const { User } = require(`../../../schemas/userdata`)
const { Guild } = require(`../../../schemas/guilddata`)
const chalk = require(`chalk`)
const fetch = require(`node-fetch`)
const cron = require(`node-cron`)
const prettyMilliseconds = require(`pretty-ms`)
const ch_list = require(`../../../discord structure/channels.json`)
const { EmbedBuilder, SlashCommandBuilder } = require("discord.js")
const { execute } = require('../../../events/client/start_bot/ready');
const { achievementStats, found, getProperty } = require(`../../../functions`)
const linksInfo = require(`../../../discord structure/links.json`)
const api = process.env.hypixel_apikey
module.exports = {
    plugin: {
        id: "seasonal",
        name: "–°–µ–∑–æ–Ω–Ω–æ–µ"
    },
    data: {
        name: `season_summer_shop`
    },
    async execute(interaction, client) {
        try {
            const guildData = await Guild.findOne({ id: interaction.guild.id })
            if (guildData.plugins.seasonal === false) return interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á—ë–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`, ephemeral: true })
            if (guildData.seasonal.summer.enabled === false) return interaction.reply({
                content: `–°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –¥–ª—è –õ–µ—Ç–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥ **1 –∏—é–Ω—è –ø–æ 31 –∞–≤–≥—É—Å—Ç–∞**!`,
                ephemeral: true
            })
            const userData = await User.findOne({ userid: interaction.user.id, guildid: interaction.guild.id })
            let symb, postfix, price, name, rank = userData.rank_number;

            switch (interaction.values[0]) {
                case "set_1": {
                    symb = `üå¥`, postfix = `‚ô•‚Å†‚ï£‚Å†[‚Å†-‚Å†_‚Å†-‚Å†]‚Å†‚ï†‚Å†‚ô•`, price = 50, name = `–ù–∞–±–æ—Ä "–õ—é–±–ª—é –õ–µ—Ç–æ!" (\`üå¥\` + \`‚ô•‚Å†‚ï£‚Å†[‚Å†-‚Å†_‚Å†-‚Å†]‚Å†‚ï†‚Å†‚ô•\`)`
                }
                    break;
                case "set_2": {
                    symb = `üå°Ô∏è`, postfix = `(‚Å†‚âß‚Å†‚ñΩ‚Å†‚â¶‚Å†)`, price = 60, name = `–ù–∞–±–æ—Ä "–Ø –≤–µ—Å—å –≥–æ—Ä—é!" (\`üå°Ô∏è\` + \`(‚Å†‚âß‚Å†‚ñΩ‚Å†‚â¶‚Å†)\`)`
                }
                    break;
                case "set_3": {
                    symb = `‚òÄÔ∏è`, postfix = `‚îè‚Å†(‚Å†Ôºæ‚Å†0‚Å†Ôºæ‚Å†)‚Å†‚îõ`, price = 70, name = `–ù–∞–±–æ—Ä "–§–∞–Ω–∞—Ç –°–æ–ª–Ω—Ü–∞!" (\`‚òÄÔ∏è\` + \`‚îè‚Å†(‚Å†Ôºæ‚Å†0‚Å†Ôºæ‚Å†)‚Å†‚îõ\`)`
                }
                    break;
                case "set_4": {
                    symb = `üåä`, postfix = `‡≤†‚Å†‡≤ó‚Å†‡≤†`, price = 80, name = `–ù–∞–±–æ—Ä "–û—Å—Ç—ã–≤—à–µ–µ –º–æ—Ä–µ!" (\`üåä\` + \`‡≤†‚Å†‡≤ó‚Å†‡≤†\`)`
                }
                    break;
                case "set_5": {
                    symb = `üåÖ`, postfix = `‡≤•‚Å†‚ï≠‚Å†‚ïÆ‚Å†‡≤•`, price = 100, name = `–ù–∞–±–æ—Ä "–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—Å—Å–≤–µ—Ç!" (\`üåÖ\` + \`‡≤•‚Å†‚ï≠‚Å†‚ïÆ‚Å†‡≤•\`)`
                }
                    break;
                case "set_6": {
                    symb = `üåû`, postfix = `(‚Å†‚òû‚Å†^‚Å†o‚Å†^‚Å†)‚Å† ‚Å†‚òû`, price = 150, name = `–ù–∞–±–æ—Ä "–õ—é–±–∏–º—á–∏–∫ –°–æ–ª–Ω—Ü–∞!" (\`üåû\` + \`(‚Å†‚òû‚Å†^‚Å†o‚Å†^‚Å†)‚Å† ‚Å†‚òû\`)`
                }
                    break;

                default:
                    break;
            }
            if (rank < 8 || userData.seasonal.summer.quests_completed < 15) {
                price = Math.round(price / 2)
                if (userData.seasonal.summer.points < price) return interaction.reply({
                    content: `–î–ª—è –ø–æ–∫—É–ø–∫–∏ \`${symb}\` –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º ${price} –æ—á–∫–æ–≤! –£ –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ${userData.seasonal.summer.points} –æ—á–∫–æ–≤. 
                    
\*–ü–æ—Å—Ç–∏—Ñ–∏–∫—Å –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, —Ç.–∫. –≤–∞—à —Ä–∞–Ω–≥ –Ω–∏–∂–µ –õ–æ—Ä–¥–∞ –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –º–µ–Ω–µ–µ 15 –ª–µ—Ç–Ω–∏—Ö –∫–≤–µ—Å—Ç–æ–≤!`,
                    ephemeral: true
                })
                userData.seasonal.summer.points -= price
                userData.seasonal.summer.su_cosm = true
                userData.displayname.symbol = symb
                userData.save()
                await interaction.reply({
                    content: `–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${name} –∑–∞ ${price} –ª–µ—Ç–Ω–∏—Ö –æ—á–∫–æ–≤! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–∞–Ω–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –Ω–∏–∫–Ω–µ–π–º–µ! –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–æ–ø—Ä–æ—Å-–º–æ–¥–µ—Ä–∞–º!
                    
\*–ü–æ—Å—Ç–∏—Ñ–∏–∫—Å –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, —Ç.–∫. –≤–∞—à —Ä–∞–Ω–≥ –Ω–∏–∂–µ –õ–æ—Ä–¥–∞ –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –º–µ–Ω–µ–µ 15 –ª–µ—Ç–Ω–∏—Ö –∫–≤–µ—Å—Ç–æ–≤!`,
                    ephemeral: true
                })
            } else if (rank >= 8 && userData.seasonal.summer.quests_completed >= 15) {

                if (userData.seasonal.summer.points < price) return interaction.reply({
                    content: `–î–ª—è –ø–æ–∫—É–ø–∫–∏ \`${symb}\` + \`${postfix}\` –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º ${price} –æ—á–∫–æ–≤! –£ –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ${userData.seasonal.summer.points} –æ—á–∫–æ–≤.`,
                    ephemeral: true
                })
                userData.seasonal.summer.points -= price
                userData.seasonal.summer.su_cosm = true
                userData.displayname.symbol = symb
                userData.displayname.suffix = postfix
                userData.save()
                await interaction.reply({
                    content: `–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${name} –∑–∞ ${price} –ª–µ—Ç–Ω–∏—Ö –æ—á–∫–æ–≤! –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–∞–Ω–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –Ω–∏–∫–Ω–µ–π–º–µ! –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–æ–ø—Ä–æ—Å-–º–æ–¥–µ—Ä–∞–º!`,
                    ephemeral: true
                })
            }

        } catch (e) {
            const admin = await client.users.fetch(`491343958660874242`)
            console.log(e)
            let options = interaction?.options.data.map(a => {
                return `{
"status": true,
"name": "${a.name}",
"type": ${a.type},
"autocomplete": ${a?.autocomplete ? true : false},
"value": "${a?.value ? a.value : "No value"}",
"user": "${a?.user?.id ? a.user.id : "No User"}",
"channel": "${a?.channel?.id ? a.channel.id : "No Channel"}",
"role": "${a?.role?.id ? a.role.id : "No Role"}",
"attachment": "${a?.attachment?.url ? a.attachment.url : "No Attachment"}"
}`
            })
            await admin.send(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`)
            await admin.send(`=> ${e}.
**ID –∫–Ω–æ–ø–∫–∏**: \`${interaction.customId}\`
**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: ${interaction.member}
**–ö–∞–Ω–∞–ª**: ${interaction.channel}
**–û–ø—Ü–∏–∏**: \`\`\`json
${interaction.options.data.length <= 0 ? `{"status": false}` : options.join(`,\n`)}
\`\`\``)
            await admin.send(`‚óæ`)
        }


    }
}
